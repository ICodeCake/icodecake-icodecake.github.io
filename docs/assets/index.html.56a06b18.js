import{_ as n,o as s,c as a,e as p}from"./app.f20c6224.js";const t={},e=p(`<h1 id="csharp-7-0-\u65B0\u7279\u6027" tabindex="-1"><a class="header-anchor" href="#csharp-7-0-\u65B0\u7279\u6027" aria-hidden="true">#</a> CSharp 7.0 \u65B0\u7279\u6027</h1><h2 id="\u65B0\u7279\u6027" tabindex="-1"><a class="header-anchor" href="#\u65B0\u7279\u6027" aria-hidden="true">#</a> \u65B0\u7279\u6027</h2><h3 id="_1-out-\u53D8\u91CF-out-variables" tabindex="-1"><a class="header-anchor" href="#_1-out-\u53D8\u91CF-out-variables" aria-hidden="true">#</a> 1. out \u53D8\u91CF\uFF08out variables\uFF09</h3><p>\u4EE5\u524D\u6211\u4EEC\u4F7F\u7528 out \u53D8\u91CF\u5FC5\u987B\u5728\u4F7F\u7528\u524D\u8FDB\u884C\u58F0\u660E\uFF0CC# 7.0 \u7ED9\u6211\u4EEC\u63D0\u4F9B\u4E86\u4E00\u79CD\u66F4\u7B80\u6D01\u7684\u8BED\u6CD5 \u201C\u4F7F\u7528\u65F6\u8FDB\u884C\u5185\u8054\u58F0\u660E\u201D \u3002\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> input <span class="token operator">=</span> <span class="token function">ReadLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">.</span><span class="token function">TryParse</span><span class="token punctuation">(</span>input<span class="token punctuation">,</span> <span class="token keyword">out</span> <span class="token class-name"><span class="token keyword">var</span></span> result<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
      <span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;\u60A8\u8F93\u5165\u7684\u6570\u5B57\u662F\uFF1A{0}&quot;</span><span class="token punctuation">,</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">else</span>
  <span class="token punctuation">{</span>
      <span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;\u65E0\u6CD5\u89E3\u6790\u8F93\u5165...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u7F16\u8BD1\u540E\uFF1A</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">int</span></span> num<span class="token punctuation">;</span>
  <span class="token class-name"><span class="token keyword">string</span></span> s <span class="token operator">=</span> Console<span class="token punctuation">.</span><span class="token function">ReadLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">.</span><span class="token function">TryParse</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token keyword">out</span> num<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
      Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;\u60A8\u8F93\u5165\u7684\u6570\u5B57\u662F\uFF1A{0}&quot;</span><span class="token punctuation">,</span> num<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">else</span>
  <span class="token punctuation">{</span>
      Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;\u65E0\u6CD5\u89E3\u6790\u8F93\u5165...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u539F\u7406\u89E3\u6790\uFF1A\u6240\u8C13\u7684 \u201C\u5185\u8054\u58F0\u660E\u201D \u7F16\u8BD1\u540E\u5C31\u662F\u4EE5\u524D\u7684\u539F\u59CB\u5199\u6CD5\uFF0C\u53EA\u662F\u73B0\u5728\u7531\u7F16\u8BD1\u5668\u6765\u5B8C\u6210\u3002</p><p>\u5907\u6CE8\uFF1A\u5728\u8FDB\u884C\u5185\u8054\u58F0\u660E\u65F6\uFF0C\u5373\u53EF\u76F4\u63A5\u5199\u660E\u53D8\u91CF\u7684\u7C7B\u578B\u4E5F\u53EF\u4EE5\u5199\u9690\u5F0F\u7C7B\u578B\uFF0C\u56E0\u4E3A out \u5173\u952E\u5B57\u4FEE\u9970\u7684\u4E00\u5B9A\u662F\u5C40\u90E8\u53D8\u91CF\u3002</p><h3 id="_2-\u5143\u7EC4-tuples" tabindex="-1"><a class="header-anchor" href="#_2-\u5143\u7EC4-tuples" aria-hidden="true">#</a> 2. \u5143\u7EC4\uFF08Tuples\uFF09</h3><p>\u503C\u5143\u7EC4\u4E5F\u662F\u4E00\u79CD\u6570\u636E\u7ED3\u6784\uFF0C\u7528\u4E8E\u8868\u793A\u7279\u5B9A\u6570\u91CF\u548C\u5143\u7D20\u5E8F\u5217\uFF0C\u4F46\u662F\u662F\u548C\u5143\u7EC4\u7C7B\u4E0D\u4E00\u6837\u7684\uFF0C\u4E3B\u8981\u533A\u522B\u5982\u4E0B\uFF1A \u503C\u5143\u7EC4\u662F\u7ED3\u6784\uFF0C\u662F\u503C\u7C7B\u578B\uFF0C\u4E0D\u662F\u7C7B\uFF0C\u800C\u5143\u7EC4\uFF08Tuple\uFF09\u662F\u7C7B\uFF0C\u5F15\u7528\u7C7B\u578B\uFF1B \u503C\u5143\u7EC4\u5143\u7D20\u662F\u53EF\u53D8\u7684\uFF0C\u4E0D\u662F\u53EA\u8BFB\u7684\uFF0C\u4E5F\u5C31\u662F\u8BF4\u53EF\u4EE5\u6539\u53D8\u503C\u5143\u7EC4\u4E2D\u7684\u5143\u7D20\u503C\uFF1B \u503C\u5143\u7EC4\u7684\u6570\u636E\u6210\u5458\u662F\u5B57\u6BB5\u4E0D\u662F\u5C5E\u6027\u3002 \u503C\u5143\u7EC4\u7684\u5177\u4F53\u4F7F\u7528\u5982\u4E0B\uFF1A</p><ol><li>\u5982\u4F55\u521B\u5EFA\u503C\u5143\u7EC4 \u548C\u5143\u7EC4\u7C7B\u4E00\u6837\uFF0C.Net Framework \u503C\u5143\u7EC4\u4E5F\u53EA\u652F\u6301 1 \u5230 7 \u4E2A\u5143\u7EC4\u5143\u7D20\uFF0C\u5982\u679C\u6709 8 \u4E2A\u5143\u7D20\u6216\u8005\u66F4\u591A\uFF0C\u9700\u8981\u4F7F\u7528\u503C\u5143\u7EC4\u7684\u5D4C\u5957\u548C Rest \u5C5E\u6027\u53BB\u5B9E\u73B0\u3002\u53E6\u5916 ValueTuple \u7C7B\u53EF\u4EE5\u63D0\u4F9B\u521B\u9020\u503C\u5143\u7EC4\u5BF9\u8C61\u7684\u9759\u6001\u65B9\u6CD5\u3002 \u5229\u7528\u6784\u9020\u51FD\u6570\u521B\u5EFA\u5143\u7EC4\uFF1A</li></ol><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> testTuple6 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ValueTuple<span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Item 1: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">testTuple6<span class="token punctuation">.</span>Item1</span><span class="token punctuation">}</span></span><span class="token string">, Item 6: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">testTuple6<span class="token punctuation">.</span>Item6</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5229\u7528 Tuple \u9759\u6001\u65B9\u6CD5\u6784\u5EFA\u5143\u7EC4\uFF0C\u6700\u591A\u652F\u6301\u516B\u4E2A\u5143\u7D20\uFF1A</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> testTuple8 <span class="token operator">=</span> ValueTuple<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Create</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Item 1: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">testTuple8<span class="token punctuation">.</span>Item1</span><span class="token punctuation">}</span></span><span class="token string">, Item 8: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">testTuple8<span class="token punctuation">.</span>Rest<span class="token punctuation">.</span>Item1</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\u8FD9\u91CC\u6784\u5EFA\u51FA\u6765\u7684 Tuple \u7C7B\u578B\u5176\u5B9E\u662F <code>Tuple&lt;int, int, int, int, int, int, int, Tuple&lt;int&gt;&gt;</code>\uFF0C\u56E0\u6B64 testTuple8.Rest \u53D6\u5230\u7684\u6570\u636E\u7C7B\u578B\u662F <code>Tuple&lt;int&gt;</code>\uFF0C\u56E0\u6B64\u8981\u60F3\u83B7\u53D6\u51C6\u786E\u503C\u9700\u8981\u53D6 Item1 \u5C5E\u6027\u3002</p><p>\u4F18\u5316\u533A\u522B\uFF1A\u5F53\u6784\u9020\u51FA\u8D85\u8FC7 7 \u4E2A\u5143\u7D20\u4EE5\u4E0A\u7684\u503C\u5143\u7EC4\u540E\uFF0C\u53EF\u4EE5\u4F7F\u7528\u63A5\u4E0B\u6765\u7684 ItemX \u8FDB\u884C\u8BBF\u95EE\u5D4C\u5957\u5143\u7EC4\u4E2D\u7684\u503C\uFF0C\u5BF9\u4E8E\u4E0A\u9762\u7684\u4F8B\u5B50\uFF0C\u8981\u8BBF\u95EE\u7B2C\u5341\u4E2A\u5143\u7D20\uFF0C\u65E2\u53EF\u4EE5\u901A\u8FC7 testTuple10.Rest.Item3 \u8BBF\u95EE\uFF0C\u4E5F\u53EF\u4EE5\u901A\u8FC7 testTuple10.Item10 \u6765\u8BBF\u95EE\u3002</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> testTuple10 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ValueTuple<span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">,</span> ValueTuple<span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ValueTuple<span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Item 10: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">testTuple10<span class="token punctuation">.</span>Rest<span class="token punctuation">.</span>Item3</span><span class="token punctuation">}</span></span><span class="token string">, Item 10: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">testTuple10<span class="token punctuation">.</span>Item10</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>\u8868\u793A\u4E00\u7EC4\u6570\u636E \u5982\u4E0B\u521B\u5EFA\u4E00\u4E2A\u503C\u5143\u7EC4\u8868\u793A\u4E00\u4E2A\u5B66\u751F\u7684\u4E09\u4E2A\u4FE1\u606F\uFF1A\u540D\u5B57\u3001\u5E74\u9F84\u548C\u8EAB\u9AD8\uFF0C\u800C\u4E0D\u7528\u5355\u72EC\u989D\u5916\u521B\u5EFA\u4E00\u4E2A\u7C7B\u3002</li></ol><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> studentInfo <span class="token operator">=</span> ValueTuple<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Create</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">uint</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;Bob&quot;</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">175</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Student Information: Name [</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">studentInfo<span class="token punctuation">.</span>Item1</span><span class="token punctuation">}</span></span><span class="token string">], Age [</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">studentInfo<span class="token punctuation">.</span>Item2</span><span class="token punctuation">}</span></span><span class="token string">], Height [</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">studentInfo<span class="token punctuation">.</span>Item3</span><span class="token punctuation">}</span></span><span class="token string">]&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>\u4ECE\u65B9\u6CD5\u8FD4\u56DE\u591A\u4E2A\u503C \u503C\u5143\u7EC4\u4E5F\u53EF\u4EE5\u5728\u51FD\u6570\u5B9A\u4E49\u4E2D\u4EE3\u66FF out \u53C2\u6570\u8FD4\u56DE\u591A\u4E2A\u503C\u3002</li></ol><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">static</span> <span class="token return-type class-name">ValueTuple<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">uint</span><span class="token punctuation">&gt;</span></span> <span class="token function">GetStudentInfo</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> name<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ValueTuple <span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">uint</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token string">&quot;Bob&quot;</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">175</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">RunTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> studentInfo <span class="token operator">=</span> <span class="token function">GetStudentInfo</span><span class="token punctuation">(</span><span class="token string">&quot;Bob&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Student Information: Name [</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">studentInfo<span class="token punctuation">.</span>Item1</span><span class="token punctuation">}</span></span><span class="token string">], Age [</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">studentInfo<span class="token punctuation">.</span>Item2</span><span class="token punctuation">}</span></span><span class="token string">], Height [</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">studentInfo<span class="token punctuation">.</span>Item3</span><span class="token punctuation">}</span></span><span class="token string">]&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F18\u5316\u533A\u522B\uFF1A\u8FD4\u56DE\u503C\u53EF\u4EE5\u4E0D\u660E\u663E\u6307\u5B9A ValueTuple\uFF0C\u4F7F\u7528\u65B0\u8BED\u6CD5(,,)\u4EE3\u66FF\uFF0C\u5982(string, int, uint)\uFF1A</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">static</span> <span class="token return-type class-name"><span class="token punctuation">(</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">uint</span><span class="token punctuation">)</span></span> <span class="token function">GetStudentInfo1</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> name<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token string">&quot;Bob&quot;</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">175</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">RunTest1</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> studentInfo <span class="token operator">=</span> <span class="token function">GetStudentInfo1</span><span class="token punctuation">(</span><span class="token string">&quot;Bob&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Student Information: Name [</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">studentInfo<span class="token punctuation">.</span>Item1</span><span class="token punctuation">}</span></span><span class="token string">], Age [</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">studentInfo<span class="token punctuation">.</span>Item2</span><span class="token punctuation">}</span></span><span class="token string">], Height [</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">studentInfo<span class="token punctuation">.</span>Item3</span><span class="token punctuation">}</span></span><span class="token string">]&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD4\u56DE\u503C\u53EF\u4EE5\u6307\u5B9A\u5143\u7D20\u540D\u5B57\uFF0C\u65B9\u4FBF\u7406\u89E3\u8BB0\u5FC6\u8D4B\u503C\u548C\u8BBF\u95EE\uFF1A</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">static</span> <span class="token return-type class-name"><span class="token punctuation">(</span><span class="token keyword">string</span> name<span class="token punctuation">,</span> <span class="token keyword">int</span> age<span class="token punctuation">,</span> <span class="token keyword">uint</span> height<span class="token punctuation">)</span></span> <span class="token function">GetStudentInfo1</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> name<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token string">&quot;Bob&quot;</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">175</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">RunTest1</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> studentInfo <span class="token operator">=</span> <span class="token function">GetStudentInfo1</span><span class="token punctuation">(</span><span class="token string">&quot;Bob&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Student Information: Name [</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">studentInfo<span class="token punctuation">.</span>name</span><span class="token punctuation">}</span></span><span class="token string">], Age [</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">studentInfo<span class="token punctuation">.</span>age</span><span class="token punctuation">}</span></span><span class="token string">], Height [</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">studentInfo<span class="token punctuation">.</span>height</span><span class="token punctuation">}</span></span><span class="token string">]&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>\u7528\u4E8E\u5355\u53C2\u6570\u65B9\u6CD5\u7684\u591A\u503C\u4F20\u9012 \u5F53\u51FD\u6570\u53C2\u6570\u4EC5\u662F\u4E00\u4E2A Object \u7C7B\u578B\u65F6\uFF0C\u53EF\u4EE5\u4F7F\u7528\u503C\u5143\u7EC4\u5B9E\u73B0\u4F20\u9012\u591A\u4E2A\u503C\u3002</li></ol><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">WriteStudentInfo</span><span class="token punctuation">(</span><span class="token class-name">Object</span> student<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> studentInfo <span class="token operator">=</span> <span class="token punctuation">(</span>ValueTuple<span class="token operator">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">uint</span><span class="token operator">&gt;</span><span class="token punctuation">)</span>student<span class="token punctuation">;</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Student Information: Name [</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">studentInfo<span class="token punctuation">.</span>Item1</span><span class="token punctuation">}</span></span><span class="token string">], Age [</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">studentInfo<span class="token punctuation">.</span>Item2</span><span class="token punctuation">}</span></span><span class="token string">], Height [</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">studentInfo<span class="token punctuation">.</span>Item3</span><span class="token punctuation">}</span></span><span class="token string">]&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">RunTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> t <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Threading<span class="token punctuation">.</span>Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Threading<span class="token punctuation">.</span>ParameterizedThreadStart</span><span class="token punctuation">(</span>WriteStudentInfo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    t<span class="token punctuation">.</span><span class="token function">Start</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">ValueTuple<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">uint</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token string">&quot;Bob&quot;</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">175</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>IsAlive<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        System<span class="token punctuation">.</span>Threading<span class="token punctuation">.</span>Thread<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>\u89E3\u6784 ValueTuple \u53EF\u4EE5\u901A\u8FC7 var (x, y)\u6216\u8005(var x, var y)\u6765\u89E3\u6790\u503C\u5143\u7EC4\u5143\u7D20\u6784\u9020\u5C40\u90E8\u53D8\u91CF\uFF0C\u540C\u65F6\u53EF\u4EE5\u4F7F\u7528\u7B26\u53F7\u201D_\u201D\u6765\u5FFD\u7565\u4E0D\u9700\u8981\u7684\u5143\u7D20\u3002</li></ol><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">static</span> <span class="token return-type class-name"><span class="token punctuation">(</span><span class="token keyword">string</span> name<span class="token punctuation">,</span> <span class="token keyword">int</span> age<span class="token punctuation">,</span> <span class="token keyword">uint</span> height<span class="token punctuation">)</span></span> <span class="token function">GetStudentInfo1</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> name<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token string">&quot;Bob&quot;</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">175</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">RunTest1</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">var</span> <span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> height<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">GetStudentInfo1</span><span class="token punctuation">(</span><span class="token string">&quot;Bob&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Student Information: Name [</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">name</span><span class="token punctuation">}</span></span><span class="token string">], Age [</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">age</span><span class="token punctuation">}</span></span><span class="token string">], Height [</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">height</span><span class="token punctuation">}</span></span><span class="token string">]&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> name1<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">var</span></span> age1<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">var</span></span> height1<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">GetStudentInfo1</span><span class="token punctuation">(</span><span class="token string">&quot;Bob&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Student Information: Name [</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">name1</span><span class="token punctuation">}</span></span><span class="token string">], Age [</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">age1</span><span class="token punctuation">}</span></span><span class="token string">], Height [</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">height1</span><span class="token punctuation">}</span></span><span class="token string">]&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">var</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> age2<span class="token punctuation">,</span> _<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">GetStudentInfo1</span><span class="token punctuation">(</span><span class="token string">&quot;Bob&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Student Information: Age [</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">age2</span><span class="token punctuation">}</span></span><span class="token string">]&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7531\u4E0A\u6240\u8FF0\uFF0CValueTuple \u4F7F C#\u53D8\u5F97\u66F4\u7B80\u5355\u6613\u7528\u3002\u8F83 Tuple \u76F8\u6BD4\u4E3B\u8981\u597D\u5904\u5982\u4E0B\uFF1A</p><p>ValueTuple \u652F\u6301\u51FD\u6570\u8FD4\u56DE\u503C\u65B0\u8BED\u6CD5\u201D(,,)\u201D\uFF0C\u4F7F\u4EE3\u7801\u66F4\u7B80\u5355\uFF1B \u80FD\u591F\u7ED9\u5143\u7D20\u547D\u540D\uFF0C\u65B9\u4FBF\u4F7F\u7528\u548C\u8BB0\u5FC6\uFF0C\u8FD9\u91CC\u9700\u8981\u6CE8\u610F\u867D\u7136\u547D\u540D\u4E86\uFF0C\u4F46\u662F\u5B9E\u9645\u4E0A value tuple \u6CA1\u6709\u5B9A\u4E49\u8FD9\u6837\u540D\u5B57\u7684\u5C5E\u6027\u6216\u8005\u5B57\u6BB5\uFF0C\u771F\u6B63\u7684\u540D\u5B57\u4ECD\u7136\u662F ItemX\uFF0C\u6240\u6709\u7684\u5143\u7D20\u540D\u5B57\u90FD\u53EA\u662F\u8BBE\u8BA1\u548C\u7F16\u8BD1\u65F6\u7528\u7684\uFF0C\u4E0D\u662F\u8FD0\u884C\u65F6\u7528\u7684\uFF08\u56E0\u6B64\u6CE8\u610F\u5BF9\u8BE5\u7C7B\u578B\u7684\u5E8F\u5217\u5316\u548C\u53CD\u5E8F\u5217\u5316\u64CD\u4F5C\uFF09\uFF1B \u53EF\u4EE5\u4F7F\u7528\u89E3\u6784\u65B9\u6CD5\u66F4\u65B9\u4FBF\u5730\u4F7F\u7528\u90E8\u5206\u6216\u5168\u90E8\u5143\u7EC4\u7684\u5143\u7D20\uFF1B \u503C\u5143\u7EC4\u662F\u503C\u7C7B\u578B\uFF0C\u4F7F\u7528\u8D77\u6765\u6BD4\u5F15\u7528\u7C7B\u578B\u7684\u5143\u7EC4\u6548\u7387\u9AD8\uFF0C\u5E76\u4E14\u503C\u5143\u7EC4\u662F\u6709\u6BD4\u8F83\u65B9\u6CD5\u7684\uFF0C\u53EF\u4EE5\u7528\u4E8E\u6BD4\u8F83\u662F\u5426\u76F8\u7B49</p><h3 id="_3-\u6A21\u5F0F\u5339\u914D-pattern-matching" tabindex="-1"><a class="header-anchor" href="#_3-\u6A21\u5F0F\u5339\u914D-pattern-matching" aria-hidden="true">#</a> 3. \u6A21\u5F0F\u5339\u914D\uFF08Pattern matching\uFF09</h3><p>3.1 is \u8868\u8FBE\u5F0F\uFF08is expressions\uFF09\uFF0C\u5982\uFF1A</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> <span class="token function">GetSum</span><span class="token punctuation">(</span><span class="token class-name">IEnumerable<span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">&gt;</span></span> values<span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
      <span class="token class-name"><span class="token keyword">var</span></span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>values <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> sum<span class="token punctuation">;</span>

      <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> item <span class="token keyword">in</span> values<span class="token punctuation">)</span>
      <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>item <span class="token keyword">is</span> <span class="token class-name"><span class="token keyword">short</span></span><span class="token punctuation">)</span>     <span class="token comment">// C# 7 \u4E4B\u524D\u7684 is expressions</span>
          <span class="token punctuation">{</span>
              sum <span class="token operator">+=</span> <span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span>item<span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>item <span class="token keyword">is</span> <span class="token class-name"><span class="token keyword">int</span></span> val<span class="token punctuation">)</span>  <span class="token comment">// C# 7 \u7684 is expressions</span>
          <span class="token punctuation">{</span>
              sum <span class="token operator">+=</span> val<span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>item <span class="token keyword">is</span> <span class="token class-name"><span class="token keyword">string</span></span> str <span class="token operator">&amp;&amp;</span> <span class="token keyword">int</span><span class="token punctuation">.</span><span class="token function">TryParse</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token keyword">out</span> <span class="token class-name"><span class="token keyword">var</span></span> result<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// is expressions \u548C out variables \u7ED3\u5408\u4F7F\u7528</span>
          <span class="token punctuation">{</span>
              sum <span class="token operator">+=</span> result<span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>item <span class="token keyword">is</span> <span class="token class-name">IEnumerable<span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">&gt;</span></span> subList<span class="token punctuation">)</span>
          <span class="token punctuation">{</span>
              sum <span class="token operator">+=</span> <span class="token function">GetSum</span><span class="token punctuation">(</span>subList<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">return</span> sum<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528\u65B9\u6CD5\uFF1A</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>  \u6761\u4EF6\u63A7\u5236\u8BED\u53E5\uFF08obj <span class="token keyword">is</span> <span class="token class-name">type</span> variable\uFF09
   <span class="token punctuation">{</span>
      <span class="token comment">// Processing...</span>
   <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7406\u89E3\u6790\uFF1A\u6B64 is \u975E\u5F7C is \uFF0C\u8FD9\u4E2A\u6269\u5C55\u7684 is \u5176\u5B9E\u662F as \u548C if \u7684\u7EC4\u5408\u3002\u5373\u5B83\u5148\u8FDB\u884C as \u8F6C\u6362\u518D\u8FDB\u884C if \u5224\u65AD\uFF0C\u5224\u65AD\u5176\u7ED3\u679C\u662F\u5426\u4E3A null\uFF0C\u4E0D\u7B49\u4E8E null \u5219\u6267\u884C</p><p>\u8BED\u53E5\u5757\u903B\u8F91\uFF0C\u53CD\u4E4B\u4E0D\u884C\u3002\u7531\u4E0A\u53EF\u77E5\u5176\u5B9E C# 7 \u4E4B\u524D\u6211\u4EEC\u4E5F\u53EF\u5B9E\u73B0\u7C7B\u4F3C\u7684\u529F\u80FD\uFF0C\u53EA\u662F\u5199\u6CD5\u4E0A\u6BD4\u8F83\u7E41\u7410\u3002</p><p>3.2switch \u8BED\u53E5\u66F4\u65B0\uFF08switch statement updates\uFF09\uFF0C\u5982\uFF1A</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> <span class="token function">GetSum</span><span class="token punctuation">(</span><span class="token class-name">IEnumerable<span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">&gt;</span></span> values<span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
      <span class="token class-name"><span class="token keyword">var</span></span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>values <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>

      <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> item <span class="token keyword">in</span> values<span class="token punctuation">)</span>
      <span class="token punctuation">{</span>
          <span class="token keyword">switch</span> <span class="token punctuation">(</span>item<span class="token punctuation">)</span>
          <span class="token punctuation">{</span>
              <span class="token keyword">case</span> <span class="token number">0</span><span class="token punctuation">:</span>                <span class="token comment">// \u5E38\u91CF\u6A21\u5F0F\u5339\u914D</span>
                  <span class="token keyword">break</span><span class="token punctuation">;</span>
              <span class="token keyword">case</span> <span class="token class-name"><span class="token keyword">short</span></span> sval<span class="token punctuation">:</span>       <span class="token comment">// \u7C7B\u578B\u6A21\u5F0F\u5339\u914D</span>
                  sum <span class="token operator">+=</span> sval<span class="token punctuation">;</span>
                  <span class="token keyword">break</span><span class="token punctuation">;</span>
              <span class="token keyword">case</span> <span class="token class-name"><span class="token keyword">int</span></span> ival<span class="token punctuation">:</span>
                  sum <span class="token operator">+=</span> ival<span class="token punctuation">;</span>
                  <span class="token keyword">break</span><span class="token punctuation">;</span>
              <span class="token keyword">case</span> <span class="token class-name"><span class="token keyword">string</span></span> str <span class="token keyword">when</span> <span class="token keyword">int</span><span class="token punctuation">.</span><span class="token function">TryParse</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token keyword">out</span> <span class="token class-name"><span class="token keyword">var</span></span> result<span class="token punctuation">)</span><span class="token punctuation">:</span>   <span class="token comment">// \u7C7B\u578B\u6A21\u5F0F\u5339\u914D + \u6761\u4EF6\u8868\u8FBE\u5F0F</span>
                  sum <span class="token operator">+=</span> result<span class="token punctuation">;</span>
                  <span class="token keyword">break</span><span class="token punctuation">;</span>
              <span class="token keyword">case</span> <span class="token class-name">IEnumerable<span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">&gt;</span></span> subList <span class="token keyword">when</span> subList<span class="token punctuation">.</span><span class="token function">Any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                  sum <span class="token operator">+=</span> <span class="token function">GetSum</span><span class="token punctuation">(</span>subList<span class="token punctuation">)</span><span class="token punctuation">;</span>
                  <span class="token keyword">break</span><span class="token punctuation">;</span>
              <span class="token keyword">default</span><span class="token punctuation">:</span>
                  <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">InvalidOperationException</span><span class="token punctuation">(</span><span class="token string">&quot;\u672A\u77E5\u7684\u7C7B\u578B&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">return</span> sum<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528\u65B9\u6CD5\uFF1A</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">switch</span> <span class="token punctuation">(</span>item<span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
      <span class="token keyword">case</span> <span class="token class-name">type</span> variable1<span class="token punctuation">:</span>
          <span class="token comment">// processing...</span>
          <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token class-name">type</span> variable2 <span class="token keyword">when</span> predicate<span class="token punctuation">:</span>
          <span class="token comment">// processing...</span>
          <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">default</span><span class="token punctuation">:</span>
          <span class="token comment">// processing...</span>
          <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u539F\u7406\u89E3\u6790\uFF1A\u6B64 switch \u975E\u5F7C switch\uFF0C\u7F16\u8BD1\u540E\u4F60\u4F1A\u53D1\u73B0\u6269\u5C55\u7684 switch \u5C31\u662F as \u3001if \u3001goto \u8BED\u53E5\u7684\u7EC4\u5408\u4F53\u3002\u540C is expressions \u4E00\u6837\uFF0C\u4EE5\u524D\u6211\u4EEC\u4E5F\u80FD\u5B9E</p><p>\u73B0\u53EA\u662F\u5199\u6CD5\u6BD4\u8F83\u7E41\u7410\u5E76\u4E14\u53EF\u8BFB\u6027\u4E0D\u5F3A\u3002</p><p>\u603B\u7ED3\uFF1A\u6A21\u5F0F\u5339\u914D\u8BED\u6CD5\u662F\u60F3\u8BA9\u6211\u4EEC\u5728\u7B80\u5355\u7684\u60C5\u51B5\u4E0B\u5B9E\u73B0\u7C7B\u4F3C\u4E0E\u591A\u6001\u4E00\u6837\u7684\u52A8\u6001\u8C03\u7528\uFF0C\u5373\u5728\u8FD0\u884C\u65F6\u786E\u5B9A\u6210\u5458\u7C7B\u578B\u548C\u8C03\u7528\u5177\u4F53\u7684\u5B9E\u73B0\u3002</p><h3 id="_4-\u5C40\u90E8\u5F15\u7528\u548C\u5F15\u7528\u8FD4\u56DE-ref-locals-and-returns" tabindex="-1"><a class="header-anchor" href="#_4-\u5C40\u90E8\u5F15\u7528\u548C\u5F15\u7528\u8FD4\u56DE-ref-locals-and-returns" aria-hidden="true">#</a> 4. \u5C40\u90E8\u5F15\u7528\u548C\u5F15\u7528\u8FD4\u56DE (Ref locals and returns)</h3><p>\u6211\u4EEC\u77E5\u9053 C# \u7684 ref \u548C out \u5173\u952E\u5B57\u662F\u5BF9\u503C\u4F20\u9012\u7684\u4E00\u4E2A\u8865\u5145\uFF0C\u662F\u4E3A\u4E86\u9632\u6B62\u503C\u7C7B\u578B\u5927\u5BF9\u8C61\u5728 Copy \u8FC7\u7A0B\u4E2D\u635F\u5931\u66F4\u591A\u7684\u6027\u80FD\u3002\u73B0\u5728\u5728 C# 7 \u4E2D ref \u5173\u952E\u5B57\u5F97</p><p>\u5230\u4E86\u52A0\u5F3A\uFF0C\u5B83\u4E0D\u4EC5\u53EF\u4EE5\u83B7\u53D6\u503C\u7C7B\u578B\u7684\u5F15\u7528\u800C\u4E14\u8FD8\u53EF\u4EE5\u83B7\u53D6\u67D0\u4E2A\u53D8\u91CF\uFF08\u5F15\u7528\u7C7B\u578B\uFF09\u7684\u5C40\u90E8\u5F15\u7528\u3002\u5982\uFF1A</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">static</span> <span class="token keyword">ref</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> <span class="token function">GetLocalRef</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token punctuation">]</span></span> arr<span class="token punctuation">,</span> <span class="token class-name">Func<span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">bool</span><span class="token punctuation">&gt;</span></span> func<span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span><span class="token function">GetLength</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
      <span class="token punctuation">{</span>
          <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span><span class="token function">GetLength</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>
          <span class="token punctuation">{</span>
              <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">func</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">,</span> j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
              <span class="token punctuation">{</span>
                  <span class="token keyword">return</span> <span class="token keyword">ref</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">,</span> j<span class="token punctuation">]</span><span class="token punctuation">;</span>
              <span class="token punctuation">}</span>
          <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">InvalidOperationException</span><span class="token punctuation">(</span><span class="token string">&quot;Not found&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Call\uFF1A</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>   <span class="token class-name"><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token punctuation">]</span></span> arr <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">{</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">15</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">25</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
   <span class="token keyword">ref</span> <span class="token class-name"><span class="token keyword">var</span></span> num <span class="token operator">=</span> <span class="token keyword">ref</span> <span class="token function">GetLocalRef</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> c <span class="token operator">=&gt;</span> c <span class="token operator">==</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   num <span class="token operator">=</span> <span class="token number">600</span><span class="token punctuation">;</span>

  Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Print results\uFF1A 600 \u4F7F\u7528\u65B9\u6CD5\uFF1A</p><ol><li><p>\u65B9\u6CD5\u7684\u8FD4\u56DE\u503C\u5FC5\u987B\u662F\u5F15\u7528\u8FD4\u56DE\uFF1A</p><p>a) \u58F0\u660E\u65B9\u6CD5\u7B7E\u540D\u65F6\u5FC5\u987B\u5728\u8FD4\u56DE\u7C7B\u578B\u524D\u52A0\u4E0A ref \u4FEE\u9970\u3002</p><p>b) \u5728\u6BCF\u4E2A return \u5173\u952E\u5B57\u540E\u4E5F\u8981\u52A0\u4E0A ref \u4FEE\u9970\uFF0C\u4EE5\u8868\u660E\u662F\u8FD4\u56DE\u5F15\u7528\u3002</p></li><li><p>\u5206\u914D\u5F15\u7528\uFF08\u5373\u8D4B\u503C\uFF09\uFF0C\u5FC5\u987B\u5728\u58F0\u660E\u5C40\u90E8\u53D8\u91CF\u524D\u52A0\u4E0A ref \u4FEE\u9970\uFF0C\u4EE5\u53CA\u5728\u65B9\u6CD5\u8FD4\u56DE\u5F15\u7528\u524D\u52A0\u4E0A ref \u4FEE\u9970\u3002</p></li></ol><p>\u6CE8\uFF1AC# \u5F00\u53D1\u7684\u662F\u6258\u7BA1\u4EE3\u7801\uFF0C\u6240\u4EE5\u4E00\u822C\u4E0D\u5E0C\u671B\u7A0B\u5E8F\u5458\u53BB\u64CD\u4F5C\u6307\u9488\u3002\u5E76\u7531\u4E0A\u8FF0\u53EF\u77E5\u5728\u4F7F\u7528\u8FC7\u7A0B\u4E2D\u9700\u8981\u5927\u91CF\u7684\u4F7F\u7528 ref \u6765\u6807\u660E\u8FD9\u662F\u5F15\u7528\u53D8\u91CF\uFF08\u7F16\u8BD1\u540E\u5176</p><p>\u5B9E\u6CA1\u90A3\u4E48\u591A\uFF09\uFF0C\u5F53\u7136\u8FD9\u4E5F\u662F\u4E3A\u4E86\u63D0\u9AD8\u4EE3\u7801\u7684\u53EF\u8BFB\u6027\u3002</p><p>\u603B\u7ED3\uFF1A\u867D\u7136 C# 7 \u4E2D\u63D0\u4F9B\u4E86\u5C40\u90E8\u5F15\u7528\u548C\u5F15\u7528\u8FD4\u56DE\uFF0C\u4F46\u4E3A\u4E86\u9632\u6B62\u6EE5\u7528\u6240\u4EE5\u4E5F\u6709\u8BF8\u591A\u7EA6\u675F\uFF0C\u5982\uFF1A</p><ol><li>\u4F60\u4E0D\u80FD\u5C06\u4E00\u4E2A\u503C\u5206\u914D\u7ED9 ref \u53D8\u91CF\uFF0C\u5982\uFF1A</li></ol><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>  <span class="token keyword">ref</span> <span class="token class-name"><span class="token keyword">int</span></span> num <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>   <span class="token comment">// error\uFF1A\u65E0\u6CD5\u4F7F\u7528\u503C\u521D\u59CB\u5316\u6309\u5F15\u7528\u53D8\u91CF</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>\u4F60\u4E0D\u80FD\u8FD4\u56DE\u4E00\u4E2A\u751F\u5B58\u671F\u4E0D\u8D85\u8FC7\u65B9\u6CD5\u4F5C\u7528\u57DF\u7684\u53D8\u91CF\u5F15\u7528\uFF0C\u5982\uFF1A</li></ol><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code> <span class="token keyword">public</span> <span class="token keyword">ref</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> <span class="token function">GetLocalRef</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> num<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">ref</span> num<span class="token punctuation">;</span>   <span class="token comment">// error: \u65E0\u6CD5\u6309\u5F15\u7528\u8FD4\u56DE\u53C2\u6570\uFF0C\u56E0\u4E3A\u5B83\u4E0D\u662F ref \u6216 out \u53C2\u6570</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>ref \u4E0D\u80FD\u4FEE\u9970 \u201C\u5C5E\u6027\u201D \u548C \u201C\u7D22\u5F15\u5668\u201D\u3002</li></ol><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>   <span class="token class-name"><span class="token keyword">var</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">ref</span> <span class="token class-name"><span class="token keyword">var</span></span> n <span class="token operator">=</span> <span class="token keyword">ref</span> list<span class="token punctuation">.</span>Count<span class="token punctuation">;</span>  <span class="token comment">// error: \u5C5E\u6027\u6216\u7D22\u5F15\u5668\u4E0D\u80FD\u4F5C\u4E3A out \u6216 ref \u53C2\u6570\u4F20\u9012</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u539F\u7406\u89E3\u6790\uFF1A\u975E\u5E38\u7B80\u5355\u5C31\u662F\u6307\u9488\u4F20\u9012\uFF0C\u5E76\u4E14\u4E2A\u4EBA\u89C9\u5F97\u6B64\u8BED\u6CD5\u7684\u4F7F\u7528\u573A\u666F\u975E\u5E38\u6709\u9650\uFF0C\u90FD\u662F\u7528\u6765\u5904\u7406\u5927\u5BF9\u8C61\u7684\uFF0C\u76EE\u7684\u662F\u51CF\u5C11 GC \u63D0\u9AD8\u6027\u80FD\u3002</p><h3 id="_5-\u5C40\u90E8\u51FD\u6570-local-functions" tabindex="-1"><a class="header-anchor" href="#_5-\u5C40\u90E8\u51FD\u6570-local-functions" aria-hidden="true">#</a> 5. \u5C40\u90E8\u51FD\u6570\uFF08Local functions\uFF09</h3><p>C# 7 \u4E2D\u7684\u4E00\u4E2A\u529F\u80FD\u201C\u5C40\u90E8\u51FD\u6570\u201D\uFF0C\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">static</span> <span class="token return-type class-name">IEnumerable<span class="token punctuation">&lt;</span><span class="token keyword">char</span><span class="token punctuation">&gt;</span></span> <span class="token function">GetCharList</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> str<span class="token punctuation">)</span>
   <span class="token punctuation">{</span>
       <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">IsNullOrWhiteSpace</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span>
           <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ArgumentNullException</span><span class="token punctuation">(</span><span class="token keyword">nameof</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token keyword">return</span> <span class="token function">GetList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token return-type class-name">IEnumerable<span class="token punctuation">&lt;</span><span class="token keyword">char</span><span class="token punctuation">&gt;</span></span> <span class="token function">GetList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
       <span class="token punctuation">{</span>
           <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> str<span class="token punctuation">.</span>Length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
           <span class="token punctuation">{</span>
               <span class="token keyword">yield</span> <span class="token keyword">return</span> str<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
           <span class="token punctuation">}</span>
       <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528\u65B9\u6CD5\uFF1A</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>   <span class="token punctuation">[</span>\u6570\u636E\u7C7B\u578B<span class="token punctuation">,</span><span class="token keyword">void</span><span class="token punctuation">]</span> \u65B9\u6CD5\u540D\uFF08<span class="token punctuation">[</span>\u53C2\u6570<span class="token punctuation">]</span>\uFF09
  <span class="token punctuation">{</span>
      <span class="token comment">// Method body\uFF1B[] \u91CC\u9762\u90FD\u662F\u53EF\u9009\u9879</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u539F\u7406\u89E3\u6790\uFF1A\u5C40\u90E8\u51FD\u6570\u867D\u7136\u662F\u5728\u5176\u4ED6\u51FD\u6570\u5185\u90E8\u58F0\u660E\uFF0C\u4F46\u5B83\u7F16\u8BD1\u540E\u5C31\u662F\u4E00\u4E2A\u88AB internal \u4FEE\u9970\u7684\u9759\u6001\u51FD\u6570\uFF0C\u5B83\u662F\u5C5E\u4E8E\u7C7B\uFF0C\u81F3\u4E8E\u5B83\u4E3A\u4EC0\u4E48\u80FD\u591F\u4F7F\u7528\u4E0A\u7EA7\u51FD</p><p>\u6570\u4E2D\u7684\u5C40\u90E8\u53D8\u91CF\u548C\u53C2\u6570\u5462\uFF1F\u90A3\u662F\u56E0\u4E3A\u7F16\u8BD1\u5668\u4F1A\u6839\u636E\u5176\u4F7F\u7528\u7684\u6210\u5458\u751F\u6210\u4E00\u4E2A\u65B0\u7C7B\u578B\uFF08Class/Struct\uFF09\u7136\u540E\u5C06\u5176\u4F20\u5165\u51FD\u6570\u4E2D\u3002\u7531\u4E0A\u53EF\u77E5\u5219\u5C40\u90E8\u51FD\u6570\u7684\u58F0</p><p>\u660E\u8DDF\u4F4D\u7F6E\u65E0\u5173\uFF0C\u5E76\u53EF\u65E0\u9650\u5D4C\u5957\u3002</p><p>\u603B\u7ED3\uFF1A\u4E2A\u4EBA\u89C9\u5F97\u5C40\u90E8\u51FD\u6570\u662F\u5BF9 C# \u5F02\u5E38\u673A\u5236\u5728\u8BED\u4E49\u4E0A\u7684\u4E00\u6B21\u8865\u5145\uFF08\u5982\u4E0A\u4F8B\uFF09\uFF0C\u4EE5\u53CA\u4E3A\u4EE3\u7801\u63D0\u4F9B\u6E05\u6670\u7684\u7ED3\u6784\u800C\u8BBE\u7F6E\u7684\u8BED\u6CD5\u3002\u4F46\u5C40\u90E8\u51FD\u6570\u4E5F\u6709\u5176\u7F3A\u70B9\uFF0C</p><p>\u5C31\u662F\u5C40\u90E8\u51FD\u6570\u4E2D\u7684\u4EE3\u7801\u65E0\u6CD5\u590D\u7528\uFF08\u53CD\u5C04\u9664\u5916\uFF09\u3002</p><h3 id="_6-\u66F4\u591A\u7684\u8868\u8FBE\u5F0F\u4F53\u6210\u5458-more-expression-bodied-members" tabindex="-1"><a class="header-anchor" href="#_6-\u66F4\u591A\u7684\u8868\u8FBE\u5F0F\u4F53\u6210\u5458-more-expression-bodied-members" aria-hidden="true">#</a> 6. \u66F4\u591A\u7684\u8868\u8FBE\u5F0F\u4F53\u6210\u5458\uFF08More expression-bodied members\uFF09</h3><p>C# 6 \u7684\u65F6\u5019\u5C31\u652F\u6301\u8868\u8FBE\u5F0F\u4F53\u6210\u5458\uFF0C\u4F46\u5F53\u65F6\u53EA\u652F\u6301\u201C\u51FD\u6570\u6210\u5458\u201D\u548C\u201C\u53EA\u8BFB\u5C5E\u6027\u201D\uFF0C\u8FD9\u4E00\u7279\u6027\u5728 C# 7 \u4E2D\u5F97\u5230\u4E86\u6269\u5C55\uFF0C\u5B83\u80FD\u652F\u6301\u66F4\u591A\u7684\u6210\u5458\uFF1A\u6784\u9020\u51FD\u6570</p><p>\u3001\u6790\u6784\u51FD\u6570\u3001\u5E26 get\uFF0Cset \u8BBF\u95EE\u5668\u7684\u5C5E\u6027\u3001\u4EE5\u53CA\u7D22\u5F15\u5668\u3002\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Student</span>
  <span class="token punctuation">{</span>
      <span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">string</span></span> _name<span class="token punctuation">;</span>

      <span class="token comment">// Expression-bodied constructor</span>
      <span class="token keyword">public</span> <span class="token function">Student</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> name<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> _name <span class="token operator">=</span> name<span class="token punctuation">;</span>

      <span class="token comment">// Expression-bodied finalizer</span>
      <span class="token operator">~</span><span class="token function">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;Finalized!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// Expression-bodied get / set accessors.</span>
      <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Name
      <span class="token punctuation">{</span>
          <span class="token keyword">get</span> <span class="token operator">=&gt;</span> _name<span class="token punctuation">;</span>
          <span class="token keyword">set</span> <span class="token operator">=&gt;</span> _name <span class="token operator">=</span> <span class="token keyword">value</span> <span class="token operator">??</span> <span class="token string">&quot;Mike&quot;</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token comment">// Expression-bodied indexers</span>
      <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token keyword">this</span><span class="token punctuation">[</span><span class="token class-name"><span class="token keyword">string</span></span> name<span class="token punctuation">]</span> <span class="token operator">=&gt;</span> Convert<span class="token punctuation">.</span><span class="token function">ToBase64String</span><span class="token punctuation">(</span>Encoding<span class="token punctuation">.</span>UTF8<span class="token punctuation">.</span><span class="token function">GetBytes</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5907\u6CE8\uFF1A\u7D22\u5F15\u5668\u5176\u5B9E\u5728 C# 6 \u4E2D\u5C31\u5F97\u5230\u4E86\u652F\u6301\uFF0C\u4F46\u5176\u5B83\u4E09\u79CD\u5728 C# 6 \u4E2D\u672A\u5F97\u5230\u652F\u6301\u3002</p><h3 id="_7-throw-\u8868\u8FBE\u5F0F-throw-expressions" tabindex="-1"><a class="header-anchor" href="#_7-throw-\u8868\u8FBE\u5F0F-throw-expressions" aria-hidden="true">#</a> 7. Throw \u8868\u8FBE\u5F0F\uFF08Throw expressions\uFF09</h3><p>\u5728 C#7.0 \u4EE5\u524D,\u6211\u4EEC\u60F3\u5224\u65AD\u4E00\u4E2A\u5B57\u7B26\u4E32\u662F\u5426\u4E3A null,\u5982\u679C\u4E3A null \u5219\u629B\u9664\u5F02\u5E38,\u6211\u4EEC\u9700\u8981\u8FD9\u4E48\u5199:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">IsNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
 <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">string</span></span> a <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Exception</span><span class="token punctuation">(</span><span class="token string">&quot;\u5F02\u5E38\u4E86!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token keyword">return</span> a<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6837,\u6211\u4EEC\u5C31\u5F88\u4E0D\u65B9\u4FBF,\u7279\u522B\u662F\u5728\u4E09\u5143\u8868\u8FBE\u5F0F \u6216\u8005\u975E\u7A7A\u8868\u8FBE\u5F0F\u4E2D,\u90FD\u65E0\u6CD5\u629B\u9664\u8FD9\u4E2A\u5F02\u5E38,\u9700\u8981\u5199 if \u8BED\u53E5.</p><p>\u90A3\u4E48\u6211\u4EEC\u5728 C#7.0 \u4E2D,\u53EF\u4EE5\u8FD9\u6837:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">IsNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">string</span></span> a <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token keyword">return</span> a <span class="token operator">??</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Exception</span><span class="token punctuation">(</span><span class="token string">&quot;\u5F02\u5E38\u4E86!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-\u6269\u5C55\u5F02\u6B65\u8FD4\u56DE\u7C7B\u578B-generalized-async-return-types" tabindex="-1"><a class="header-anchor" href="#_8-\u6269\u5C55\u5F02\u6B65\u8FD4\u56DE\u7C7B\u578B-generalized-async-return-types" aria-hidden="true">#</a> 8. \u6269\u5C55\u5F02\u6B65\u8FD4\u56DE\u7C7B\u578B\uFF08Generalized async return types\uFF09</h3><p>\u4EE5\u524D\u5F02\u6B65\u7684\u8FD4\u56DE\u7C7B\u578B\u5FC5\u987B\u662F\uFF1A<code>Task</code>\u3001<code>Task&lt;T&gt;</code>\u3001<code>void</code>\uFF0C\u73B0\u5728 C# 7 \u4E2D\u65B0\u589E\u4E86\u4E00\u79CD\u7C7B\u578B\uFF1A<code>ValueTask&lt;T&gt;</code>\uFF0C\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>   <span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token return-type class-name">ValueTask<span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">&gt;</span></span> <span class="token function">Func</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
   <span class="token punctuation">{</span>
       <span class="token keyword">await</span> Task<span class="token punctuation">.</span><span class="token function">Delay</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token number">100</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u603B\u7ED3\uFF1A<code>ValueTask&lt;T&gt;</code> \u4E0E <code>ValueTuple</code> \u975E\u5E38\u76F8\u4F3C\uFF0C\u6240\u4EE5\u5C31\u4E0D\u5217\u4E3E\uFF1A <code>ValueTask&lt;T&gt;</code> \u4E0E <code>Task</code> \u4E4B\u95F4\u7684\u5F02\u540C\u4E86\uFF0C\u4F46\u5B83\u4EEC\u90FD\u662F\u4E3A\u4E86\u4F18\u5316\u7279\u5B9A\u573A\u666F\u6027\u80FD\u800C</p><p>\u65B0\u589E\u7684\u7C7B\u578B\u3002</p><p>\u4F7F\u7528 <code>ValueTask&lt;T&gt;</code> \u5219\u9700\u8981\u5BFC\u5165\uFF1A Install - Package System.Threading.Tasks.Extensions</p><h3 id="_9-\u6570\u5B57\u6587\u672C\u8BED\u6CD5\u7684\u6539\u8FDB-numeric-literal-syntax-improvements" tabindex="-1"><a class="header-anchor" href="#_9-\u6570\u5B57\u6587\u672C\u8BED\u6CD5\u7684\u6539\u8FDB-numeric-literal-syntax-improvements" aria-hidden="true">#</a> 9. \u6570\u5B57\u6587\u672C\u8BED\u6CD5\u7684\u6539\u8FDB\uFF08Numeric literal syntax improvements\uFF09</h3><p>C# 7 \u8FD8\u5305\u542B\u4E24\u4E2A\u65B0\u7279\u6027\uFF1A\u4E8C\u8FDB\u5236\u6587\u5B57\u3001\u6570\u5B57\u5206\u9694\u7B26\uFF0C\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>  <span class="token class-name"><span class="token keyword">var</span></span> one <span class="token operator">=</span> <span class="token number">0b0001</span><span class="token punctuation">;</span>
  <span class="token class-name"><span class="token keyword">var</span></span> sixteen <span class="token operator">=</span> <span class="token number">0b0001_0000</span><span class="token punctuation">;</span>
  <span class="token class-name"><span class="token keyword">long</span></span> salary <span class="token operator">=</span> <span class="token number">1000_000_000</span><span class="token punctuation">;</span>
  <span class="token class-name"><span class="token keyword">decimal</span></span> pi <span class="token operator">=</span> <span class="token number">3.141_592_653_589m</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\uFF1A\u4E8C\u8FDB\u5236\u6587\u672C\u662F\u4EE5 0b\uFF08\u96F6 b\uFF09\u5F00\u5934\uFF0C\u5B57\u6BCD\u4E0D\u533A\u5206\u5927\u5C0F\u5199\uFF1B\u6570\u5B57\u5206\u9694\u7B26\u53EA\u6709\u4E09\u4E2A\u5730\u65B9\u4E0D\u80FD\u5199\uFF1A\u5F00\u5934\uFF0C\u7ED3\u5C3E\uFF0C\u5C0F\u6570\u70B9\u524D\u540E\u3002</p><p>\u603B\u7ED3\uFF1A\u4E8C\u8FDB\u5236\u6587\u672C\uFF0C\u6570\u5B57\u5206\u9694\u7B26 \u53EF\u4F7F\u5E38\u91CF\u503C\u66F4\u5177\u53EF\u8BFB\u6027\u3002</p>`,96),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(t,[["render",c],["__file","index.html.vue"]]);export{k as default};
