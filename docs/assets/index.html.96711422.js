import{_ as i,r as a,o as u,c as r,a as n,d as s,b as e,w as p,e as t}from"./app.7b48ccfe.js";const k={},d=t(`<h1 id="csharp-10-0-\u65B0\u7279\u6027" tabindex="-1"><a class="header-anchor" href="#csharp-10-0-\u65B0\u7279\u6027" aria-hidden="true">#</a> CSharp 10.0 \u65B0\u7279\u6027</h1><h2 id="\u4E00\u3001-\u5B89\u88C5\u5FC5\u5907" tabindex="-1"><a class="header-anchor" href="#\u4E00\u3001-\u5B89\u88C5\u5FC5\u5907" aria-hidden="true">#</a> \u4E00\u3001 \u5B89\u88C5\u5FC5\u5907</h2><p>\u4E0B\u8F7D\u6700\u65B0 6 .NET SDK\u3002 \u8FD8\u53EF\u4EE5\u4E0B\u8F7D Visual Studio 2022\uFF0C\u5176\u4E2D\u5305\u62EC .NET 6 SDK\u3002</p><h2 id="\u4E8C\u3001\u65B0\u7279\u6027" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u3001\u65B0\u7279\u6027" aria-hidden="true">#</a> \u4E8C\u3001\u65B0\u7279\u6027</h2><h3 id="_1-record-struct" tabindex="-1"><a class="header-anchor" href="#_1-record-struct" aria-hidden="true">#</a> 1.record struct</h3><p>\u9996\u5148\u81EA\u7136\u662F record struct\uFF0C\u89E3\u51B3\u4E86 record \u53EA\u80FD\u7ED9 class \u800C\u4E0D\u80FD\u7ED9 struct \u7528\u7684\u95EE\u9898\uFF1A</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">record</span> <span class="token class-name"><span class="token keyword">struct</span></span> <span class="token function">Point</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> X<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> Y<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u7528 record \u5B9A\u4E49 struct \u7684\u597D\u5904\u5176\u5B9E\u6709\u5F88\u591A\uFF0C\u4F8B\u5982\u4F60\u65E0\u9700\u91CD\u5199 GetHashCode \u548C Equals \u4E4B\u7C7B\u7684\u65B9\u6CD5\u4E86\u3002</p><p>sealed record ToString \u65B9\u6CD5 \u4E4B\u524D record \u7684 ToString \u662F\u4E0D\u80FD\u4FEE\u9970\u4E3A sealed \u7684\uFF0C\u56E0\u6B64\u5982\u679C\u4F60\u7EE7\u627F\u4E86\u4E00\u4E2A record\uFF0C\u76F8\u5E94\u7684 ToString \u884C\u4E3A\u4E5F\u4F1A\u88AB\u6539\u53D8\uFF0C\u56E0\u6B64\u8FD9\u662F\u4E2A\u865A\u65B9\u6CD5\u3002</p><p>\u4F46\u662F\u73B0\u5728\u4F60\u53EF\u4EE5\u628A record \u91CC\u7684 ToString \u65B9\u6CD5\u6807\u8BB0\u6210 sealed\uFF0C\u8FD9\u6837\u4F60\u7684 ToString \u65B9\u6CD5\u5C31\u4E0D\u4F1A\u88AB\u91CD\u5199\u4E86\u3002</p><h3 id="_2-struct-\u65E0\u53C2\u6784\u9020\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#_2-struct-\u65E0\u53C2\u6784\u9020\u51FD\u6570" aria-hidden="true">#</a> 2.struct \u65E0\u53C2\u6784\u9020\u51FD\u6570</h3><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">struct</span> <span class="token class-name">Foo</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name"><span class="token keyword">int</span></span> X<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token function">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> X <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F46\u662F\u4F7F\u7528\u7684\u65F6\u5019\u5C31\u8981\u6CE8\u610F\u4E86\uFF0C\u56E0\u4E3A\u65E0\u53C2\u6784\u9020\u51FD\u6570\u7684\u5B58\u5728\u4F7F\u5F97 new struct() \u548C default(struct) \u7684\u8BED\u4E49\u4E0D\u4E00\u6837\u4E86\uFF0C\u4F8B\u5982 new Foo().X == default(Foo).X \u5728\u4E0A\u9762\u8FD9\u4E2A\u4F8B\u5B50\u4E2D\u5C06\u4F1A\u5F97\u51FA false\u3002</p><h3 id="_3-\u533F\u540D\u5BF9\u8C61\u7684-with" tabindex="-1"><a class="header-anchor" href="#_3-\u533F\u540D\u5BF9\u8C61\u7684-with" aria-hidden="true">#</a> 3.\u533F\u540D\u5BF9\u8C61\u7684 with</h3><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> x <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token punctuation">{</span> A <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> B <span class="token operator">=</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> y <span class="token operator">=</span> x <span class="token keyword">with</span> <span class="token punctuation">{</span> A <span class="token operator">=</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC y.A \u5C06\u4F1A\u662F 3 \u3002</p><h3 id="_4-\u5168\u5C40\u7684-using" tabindex="-1"><a class="header-anchor" href="#_4-\u5168\u5C40\u7684-using" aria-hidden="true">#</a> 4.\u5168\u5C40\u7684 using</h3><p>\u5229\u7528\u5168\u5C40 using \u53EF\u4EE5\u7ED9\u6574\u4E2A\u9879\u76EE\u542F\u7528 usings\uFF0C\u4E0D\u518D\u9700\u8981\u6BCF\u4E2A\u6587\u4EF6\u90FD\u5199\u4E00\u4EFD\u3002\u6BD4\u5982\u4F60\u53EF\u4EE5\u521B\u5EFA\u4E00\u4E2A Import.cs\uFF0C\u7136\u540E\u91CC\u9762\u5199\uFF1A</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">global</span> <span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token keyword">global</span> <span class="token keyword">using</span> <span class="token class-name">i32</span> <span class="token operator">=</span> <span class="token class-name">System<span class="token punctuation">.</span>Int32</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7136\u540E\u4F60\u6574\u4E2A\u9879\u76EE\u90FD\u65E0\u9700\u518D using System\uFF0C\u5E76\u4E14\u53EF\u4EE5\u7528 i32 \u4E86\u3002</p><h3 id="_5-\u6587\u4EF6\u8303\u56F4\u7684-namespace" tabindex="-1"><a class="header-anchor" href="#_5-\u6587\u4EF6\u8303\u56F4\u7684-namespace" aria-hidden="true">#</a> 5.\u6587\u4EF6\u8303\u56F4\u7684 namespace</h3><p>\u8FD9\u4E2A\u6BD4\u8F83\u7B80\u5355\uFF0C\u4EE5\u524D\u5199 namespace \u8FD8\u5F97\u5E26\u4E00\u5C42\u5927\u62EC\u53F7\uFF0C\u4EE5\u540E\u5982\u679C\u4E00\u4E2A\u6587\u4EF6\u91CC\u53EA\u6709\u4E00\u4E2A namespace \u7684\u8BDD\uFF0C\u90A3\u76F4\u63A5\u5728\u6700\u4E0A\u9762\u8FD9\u6837\u5199\u5C31\u884C\u4E86\uFF1A</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">namespace</span> <span class="token namespace">MyNamespace</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_6-\u5E38\u91CF\u5B57\u7B26\u4E32\u63D2\u503C" tabindex="-1"><a class="header-anchor" href="#_6-\u5E38\u91CF\u5B57\u7B26\u4E32\u63D2\u503C" aria-hidden="true">#</a> 6.\u5E38\u91CF\u5B57\u7B26\u4E32\u63D2\u503C</h3><p>\u4F60\u53EF\u4EE5\u7ED9 const string \u4F7F\u7528\u5B57\u7B26\u4E32\u63D2\u503C\u4E86\uFF0C\u975E\u5E38\u65B9\u4FBF\uFF1A</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">string</span></span> x <span class="token operator">=</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">string</span></span> y <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">$&quot;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">x</span><span class="token punctuation">}</span></span><span class="token string">, world!&quot;</span></span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-lambda-\u6539\u8FDB" tabindex="-1"><a class="header-anchor" href="#_7-lambda-\u6539\u8FDB" aria-hidden="true">#</a> 7.lambda \u6539\u8FDB</h3><ol><li>\u652F\u6301 attributes lambda \u53EF\u4EE5\u5E26 attribute \u4E86\uFF1A</li></ol><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>f <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Foo</span></span><span class="token punctuation">]</span> <span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x<span class="token punctuation">;</span> <span class="token comment">// \u7ED9 lambda \u8BBE\u7F6E</span>
f <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token attribute"><span class="token target keyword">return</span><span class="token punctuation">:</span> <span class="token class-name">Foo</span></span><span class="token punctuation">]</span> <span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x<span class="token punctuation">;</span> <span class="token comment">// \u7ED9 lambda \u8FD4\u56DE\u503C\u8BBE\u7F6E</span>
f <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Foo</span></span><span class="token punctuation">]</span> x<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x<span class="token punctuation">;</span> <span class="token comment">// \u7ED9 lambda \u53C2\u6570\u8BBE\u7F6E</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>\u652F\u6301\u6307\u5B9A\u8FD4\u56DE\u503C\u7C7B\u578B \u6B64\u524D C# \u7684 lambda \u8FD4\u56DE\u503C\u7C7B\u578B\u9760\u63A8\u5BFC\uFF0CC# 10 \u5F00\u59CB\u5141\u8BB8\u5728\u53C2\u6570\u5217\u8868\u6700\u524D\u9762\u663E\u793A\u6307\u5B9A lambda \u7C7B\u578B\u4E86\uFF1A</li></ol><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>f <span class="token operator">=</span> <span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token number">4</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>\u652F\u6301 ref \u3001in \u3001out \u7B49\u4FEE\u9970</li></ol><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>f <span class="token operator">=</span> <span class="token keyword">ref</span> <span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token keyword">ref</span> <span class="token class-name"><span class="token keyword">int</span></span> x<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">ref</span> x<span class="token punctuation">;</span> <span class="token comment">// \u8FD4\u56DE\u4E00\u4E2A\u53C2\u6570\u7684\u5F15\u7528</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="4"><li>\u5934\u7B49\u51FD\u6570 \u51FD\u6570\u53EF\u4EE5\u9690\u5F0F\u8F6C\u6362\u5230 delegate\uFF0C\u4E8E\u662F\u51FD\u6570\u4E0A\u5347\u81F3\u5934\u7B49\u51FD\u6570\uFF1A</li></ol><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token class-name"><span class="token keyword">var</span></span> x <span class="token operator">=</span> Foo<span class="token punctuation">;</span>
<span class="token function">x</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// hello</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>\u81EA\u7136\u59D4\u6258\u7C7B\u578B lambda \u73B0\u5728\u4F1A\u81EA\u52A8\u521B\u5EFA\u81EA\u7136\u59D4\u6258\u7C7B\u578B\uFF0C\u4E8E\u662F\u4E0D\u518D\u9700\u8981\u5199\u51FA\u7C7B\u578B\u4E86\u3002</li></ol><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> f <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// Func&lt;int&gt;</span>
<span class="token class-name"><span class="token keyword">var</span></span> g <span class="token operator">=</span> <span class="token keyword">string</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> x<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> y<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token interpolation-string"><span class="token string">$&quot;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">y</span><span class="token punctuation">}</span></span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">x</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">;</span> <span class="token comment">// Func&lt;int, string, string&gt;</span>
<span class="token class-name"><span class="token keyword">var</span></span> h <span class="token operator">=</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">.</span>GetHashCode<span class="token punctuation">;</span> <span class="token comment">// Func&lt;int&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-callerargumentexpression" tabindex="-1"><a class="header-anchor" href="#_8-callerargumentexpression" aria-hidden="true">#</a> 8.CallerArgumentExpression</h3><p>\u73B0\u5728\uFF0CCallerArgumentExpression \u8FD9\u4E2A attribute \u7EC8\u4E8E\u6709\u7528\u4E86\u3002\u501F\u52A9\u8FD9\u4E2A attribute\uFF0C\u7F16\u8BD1\u5668\u4F1A\u81EA\u52A8\u586B\u5145\u8C03\u7528\u53C2\u6570\u7684\u8868\u8FBE\u5F0F\u5B57\u7B26\u4E32\uFF0C\u4F8B\u5982\uFF1A</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Foo</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> <span class="token keyword">value</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">CallerArgumentExpression</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span> <span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> expression <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>expression <span class="token operator">+</span> <span class="token string">&quot; = &quot;</span> <span class="token operator">+</span> <span class="token keyword">value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u4F60\u8C03\u7528 Foo(4 + 5) \u65F6\uFF0C\u4F1A\u8F93\u51FA 4 + 5 = 9\u3002\u8FD9\u5BF9\u6D4B\u8BD5\u6846\u67B6\u6781\u5176\u6709\u7528\uFF0C\u56E0\u4E3A\u4F60\u53EF\u4EE5\u8F93\u51FA assert \u7684\u539F\u8868\u8FBE\u5F0F\u4E86\uFF1A</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Assert</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">bool</span></span> <span class="token keyword">value</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">CallerArgumentExpression</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span> <span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> expr <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">value</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">AssertFailureException</span><span class="token punctuation">(</span>expr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_9-tuple-\u652F\u6301\u6DF7\u5408\u5B9A\u4E49\u548C\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#_9-tuple-\u652F\u6301\u6DF7\u5408\u5B9A\u4E49\u548C\u4F7F\u7528" aria-hidden="true">#</a> 9.tuple \u652F\u6301\u6DF7\u5408\u5B9A\u4E49\u548C\u4F7F\u7528</h3><p>\u6BD4\u5982\uFF1A</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">int</span></span> y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">var</span></span> z<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E8E\u662F y \u5C31\u53D8\u6210 2 \u4E86\uFF0C\u540C\u65F6\u8FD8\u521B\u5EFA\u4E86\u4E24\u4E2A\u53D8\u91CF x \u548C z\uFF0C\u5206\u522B\u662F 1 \u548C 3 \u3002</p><h3 id="_10-\u63A5\u53E3\u652F\u6301\u62BD\u8C61\u9759\u6001\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_10-\u63A5\u53E3\u652F\u6301\u62BD\u8C61\u9759\u6001\u65B9\u6CD5" aria-hidden="true">#</a> 10.\u63A5\u53E3\u652F\u6301\u62BD\u8C61\u9759\u6001\u65B9\u6CD5</h3>`,47),m=n("code",null,"IMonoid<T>",-1),v=t(`<div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">interface</span> <span class="token class-name">IMonoid<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span> <span class="token keyword">where</span> <span class="token class-name">T</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IMonoid<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">abstract</span> <span class="token keyword">static</span> <span class="token return-type class-name">T</span> Zero <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">abstract</span> <span class="token keyword">static</span> T <span class="token keyword">operator</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token class-name">T</span> l<span class="token punctuation">,</span> <span class="token class-name">T</span> r<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7136\u540E\u53EF\u4EE5\u5BF9\u5176\u8FDB\u884C\u5B9E\u73B0\uFF0C\u4F8B\u5982\u8FD9\u91CC\u7684 MyInt\uFF1A</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyInt</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IMonoid<span class="token punctuation">&lt;</span>MyInt<span class="token punctuation">&gt;</span></span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">MyInt</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span> Value <span class="token operator">=</span> val<span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">MyInt</span> Zero <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MyInt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> MyInt <span class="token keyword">operator</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token class-name">MyInt</span> l<span class="token punctuation">,</span> <span class="token class-name">MyInt</span> r<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MyInt</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>Value <span class="token operator">+</span> r<span class="token punctuation">.</span>Value<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Value <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7136\u540E\u5C31\u80FD\u5199\u51FA\u4E00\u4E2A\u65B9\u6CD5\u5BF9 <code>IMoniod&lt;T&gt;</code> \u8FDB\u884C\u6C42\u548C\u4E86\uFF0C\u8FD9\u91CC\u4E3A\u4E86\u65B9\u4FBF\u5199\u6210\u6269\u5C55\u65B9\u6CD5\uFF1A</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">IMonoidExtensions</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">T</span> <span class="token generic-method"><span class="token function">Sum</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token class-name">IEnumerable<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span> t<span class="token punctuation">)</span> <span class="token keyword">where</span> <span class="token class-name">T</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IMonoid<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span></span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">var</span></span> result <span class="token operator">=</span> T<span class="token punctuation">.</span>Zero<span class="token punctuation">;</span>
        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> i <span class="token keyword">in</span> t<span class="token punctuation">)</span> result <span class="token operator">+=</span> i<span class="token punctuation">;</span>
        <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6700\u540E\u8C03\u7528\uFF1A</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name">List<span class="token punctuation">&lt;</span>MyInt<span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">new</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">Sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 6</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F60\u53EF\u80FD\u4F1A\u95EE\u4E3A\u4EC0\u4E48\u8981\u5F15\u5165\u4E00\u4E2A <code>System.Runtime.Experimental</code>\uFF0C\u56E0\u4E3A\u8FD9\u4E2A\u5305\u91CC\u9762\u5305\u542B\u4E86 .NET \u57FA\u7840\u7C7B\u578B\u7684\u6539\u8FDB\uFF1A\u7ED9\u6240\u6709\u7684\u57FA\u7840\u7C7B\u578B\u90FD\u5B9E\u73B0\u4E86\u76F8\u5E94\u7684\u63A5\u53E3\uFF0C\u6BD4\u5982\u7ED9\u6570\u503C\u7C7B\u578B\u90FD\u5B9E\u73B0\u4E86 <code>INumber&lt;T&gt;</code>\uFF0C\u7ED9\u53EF\u4EE5\u52A0\u7684\u4E1C\u897F\u90FD\u5B9E\u73B0\u4E86 <code>IAdditionOperators&lt;TLeft, TRight, TResult&gt;</code> \u7B49\u7B49\uFF0C\u7528\u8D77\u6765\u5C06\u4F1A\u975E\u5E38\u65B9\u4FBF\uFF0C\u6BD4\u5982\u4F60\u60F3\u5199\u4E00\u4E2A\u51FD\u6570\uFF0C\u8FD9\u4E2A\u51FD\u6570\u7528\u6765\u628A\u80FD\u76F8\u52A0\u7684\u4E1C\u897F\u52A0\u8D77\u6765\uFF1A</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token return-type class-name">T</span> <span class="token generic-method"><span class="token function">Add</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token class-name">T</span> left<span class="token punctuation">,</span> <span class="token class-name">T</span> right<span class="token punctuation">)</span> <span class="token keyword">where</span> <span class="token class-name">T</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IAdditionOperators<span class="token punctuation">&lt;</span>T<span class="token punctuation">,</span> T<span class="token punctuation">,</span> T<span class="token punctuation">&gt;</span></span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> left <span class="token operator">+</span> right<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5C31\u641E\u5B9A\u4E86\u3002</p><h3 id="_11-\u6CDB\u578B-attribute" tabindex="-1"><a class="header-anchor" href="#_11-\u6CDB\u578B-attribute" aria-hidden="true">#</a> 11.\u6CDB\u578B attribute</h3><p>C# \u7684 attributes \u652F\u6301\u6CDB\u578B\u4E86\uFF0C\u4E0D\u8FC7 .NET 6 \u4E2D\u5C06\u4EE5\u9884\u89C8\u7279\u5B9A\u653E\u51FA\uFF0C\u56E0\u6B64\u9700\u8981 <code>&lt;LangVersion&gt;preview&lt;/LangVersion&gt;</code></p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">class</span> <span class="token class-name">TestAttribute<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">Attribute</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">T</span> Data <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token function">TestAttribute</span><span class="token punctuation">(</span><span class="token class-name">T</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span> Data <span class="token operator">=</span> data<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7136\u540E\u4F60\u5C31\u80FD\u8FD9\u4E48\u7528\u4E86\uFF1A</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token punctuation">[</span><span class="token generic-method"><span class="token function">Test</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token generic-method"><span class="token function">Test</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">float</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token number">4.5f</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token generic-method"><span class="token function">Test</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_12-\u5141\u8BB8\u5728\u65B9\u6CD5\u4E0A\u6307\u5B9A-asyncmethodbuilder" tabindex="-1"><a class="header-anchor" href="#_12-\u5141\u8BB8\u5728\u65B9\u6CD5\u4E0A\u6307\u5B9A-asyncmethodbuilder" aria-hidden="true">#</a> 12.\u5141\u8BB8\u5728\u65B9\u6CD5\u4E0A\u6307\u5B9A AsyncMethodBuilder</h3><p>C# 10 \u5C06\u5141\u8BB8\u65B9\u6CD5\u4E0A\u4F7F\u7528 <code>[AsyncMethodBuilder(...)]</code> \u6765\u4F7F\u7528\u4F60\u81EA\u5DF1\u5B9E\u73B0\u7684 async method builder\uFF0C\u4EE3\u66FF\u81EA\u5E26\u7684 Task \u6216\u8005 ValueTask \u7684\u5F02\u6B65\u65B9\u6CD5\u6784\u9020\u5668\u3002\u8FD9\u4E5F\u6709\u52A9\u4E8E\u4F60\u81EA\u5DF1\u5B9E\u73B0\u96F6\u5F00\u9500\u7684\u5F02\u6B65\u65B9\u6CD5\u3002</p><h3 id="_13-\u5D4C\u5957\u5C5E\u6027\u6A21\u5F0F\u5339\u914D\u6539\u8FDB" tabindex="-1"><a class="header-anchor" href="#_13-\u5D4C\u5957\u5C5E\u6027\u6A21\u5F0F\u5339\u914D\u6539\u8FDB" aria-hidden="true">#</a> 13.\u5D4C\u5957\u5C5E\u6027\u6A21\u5F0F\u5339\u914D\u6539\u8FDB</h3><p>\u4EE5\u524D\u5728\u5339\u914D\u5D4C\u5957\u5C5E\u6027\u7684\u65F6\u5019\u9700\u8981\u8FD9\u4E48\u5199\uFF1A</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token keyword">is</span> <span class="token punctuation">{</span> X<span class="token punctuation">:</span> <span class="token punctuation">{</span> Y<span class="token punctuation">:</span> <span class="token punctuation">{</span> Z<span class="token punctuation">:</span> <span class="token number">4</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token range operator">..</span><span class="token punctuation">.</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u73B0\u5728\u53EA\u9700\u8981\u7B80\u5355\u7684\uFF1A</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token keyword">is</span> <span class="token punctuation">{</span> X<span class="token punctuation">.</span>Y<span class="token punctuation">.</span>Z<span class="token punctuation">:</span> <span class="token number">4</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token range operator">..</span><span class="token punctuation">.</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5C31\u53EF\u4EE5\u4E86\u3002</p><h1 id="\u53C2\u8003\u94FE\u63A5" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u94FE\u63A5" aria-hidden="true">#</a> \u53C2\u8003\u94FE\u63A5</h1>`,24),h={href:"https://docs.microsoft.com/zh-cn/dotnet/csharp/whats-new/csharp-10",target:"_blank",rel:"noopener noreferrer"};function b(g,y){const o=a("LangVersion"),c=a("EnablePreviewFeatures"),l=a("ExternalLinkIcon");return u(),r("div",null,[d,n("p",null,[s("\u8FD9\u4E2A\u7279\u6027\u5C06\u4F1A\u5728 .NET 6 \u4F5C\u4E3A preview \u7279\u6027\u653E\u51FA\uFF0C\u610F\u5473\u7740\u9ED8\u8BA4\u662F\u4E0D\u542F\u7528\u7684\uFF0C\u9700\u8981\u8BBE\u7F6E"),e(o,null,{default:p(()=>[s("preview")]),_:1}),s(" \u548C "),e(c,null,{default:p(()=>[s("true")]),_:1}),s("\uFF0C\u7136\u540E\u5F15\u5165\u4E00\u4E2A\u5B98\u65B9\u7684 nuget \u5305 System.Runtime.Experimental \u6765\u542F\u7528\u3002 \u7136\u540E\u63A5\u53E3\u5C31\u53EF\u4EE5\u58F0\u660E\u62BD\u8C61\u9759\u6001\u6210\u5458\u4E86\uFF0C.NET \u7684\u7C7B\u578B\u7CFB\u7EDF\u6B63\u5F0F\u5177\u5907\u865A\u9759\u6001\u65B9\u6CD5\u5206\u53D1\u80FD\u529B\u3002 \u4F8B\u5982\uFF0C\u4F60\u60F3\u5B9A\u4E49\u4E00\u4E2A\u53EF\u52A0\u800C\u4E14\u6709\u96F6\u7684\u63A5\u53E3 "),m]),v,n("ul",null,[n("li",null,[n("a",h,[s("C# 10 \u4E2D\u7684\u65B0\u589E\u529F\u80FD"),e(l)])])])])}const x=i(k,[["render",b],["__file","index.html.vue"]]);export{x as default};
