import{_ as n,o as s,c as a,e as p}from"./app.7fe9c44d.js";const t={},e=p(`<h1 id="js-\u4E0E-ts-\u4E2D\u5404\u79CD\u5FAA\u73AF\u904D\u5386\u65B9\u5F0F-for-in-for-of-foreach-filter-map-every-some-reduce-reduceright-\u4E4B\u95F4\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#js-\u4E0E-ts-\u4E2D\u5404\u79CD\u5FAA\u73AF\u904D\u5386\u65B9\u5F0F-for-in-for-of-foreach-filter-map-every-some-reduce-reduceright-\u4E4B\u95F4\u7684\u533A\u522B" aria-hidden="true">#</a> js \u4E0E ts \u4E2D\u5404\u79CD\u5FAA\u73AF\u904D\u5386\u65B9\u5F0F\uFF1Afor...in\uFF0Cfor\u2026of\uFF0CforEach()\uFF0Cfilter()\uFF0Cmap()\uFF0Cevery()\uFF0Csome() \uFF0Creduce()\uFF0CreduceRight()\u4E4B\u95F4\u7684\u533A\u522B</h1><h3 id="_1-for-in-\u3001for-of" tabindex="-1"><a class="header-anchor" href="#_1-for-in-\u3001for-of" aria-hidden="true">#</a> 1. for\u2026in \u3001for\u2026of</h3><blockquote><p>\u5E38\u7528\u4E8E\u904D\u5386\u5BF9\u8C61\u3002for\u2026in \u5FAA\u73AF\u8BFB\u53D6\u952E\u540D\uFF0Cfor\u2026of \u5FAA\u73AF\u8BFB\u53D6\u952E\u503C\u3002\u5982\u679C\u8981\u901A\u8FC7 for\u2026of \u5FAA\u73AF\uFF0C\u83B7\u53D6\u6570\u7EC4\u7684\u7D22\u5F15\uFF0C\u53EF\u4EE5\u501F\u52A9\u6570\u7EC4\u5B9E\u4F8B\u7684 entries \u65B9\u6CD5\u548C keys \u65B9\u6CD5\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">in</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token string">&quot;-&quot;</span> <span class="token operator">+</span> list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6253\u5370\uFF1A 0-4\uFF0C1-5\uFF0C2-6</span>
<span class="token punctuation">}</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">of</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6253\u5370\uFF1A 4\uFF0C5\uFF0C6</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="for-in-\u5FAA\u73AF\u51E0\u4E2A\u7F3A\u70B9" tabindex="-1"><a class="header-anchor" href="#for-in-\u5FAA\u73AF\u51E0\u4E2A\u7F3A\u70B9" aria-hidden="true">#</a> for\u2026in \u5FAA\u73AF\u51E0\u4E2A\u7F3A\u70B9</h3><p>\u6570\u7EC4\u7684\u952E\u540D\u662F\u6570\u5B57\uFF0C\u4F46\u662F for\u2026in \u5FAA\u73AF\u662F\u4EE5\u5B57\u7B26\u4E32\u4F5C\u4E3A\u952E\u540D\u201C0\u201D\u3001\u201C1\u201D\u3001\u201C2\u201D\u7B49\u7B49\u3002 for\u2026in \u5FAA\u73AF\u4E0D\u4EC5\u904D\u5386\u6570\u5B57\u952E\u540D\uFF0C\u8FD8\u4F1A\u904D\u5386\u624B\u52A8\u6DFB\u52A0\u7684\u5176\u4ED6\u952E\uFF0C\u751A\u81F3\u5305\u62EC\u539F\u578B\u94FE\u4E0A\u7684\u952E\u3002 \u67D0\u4E9B\u60C5\u51B5\u4E0B\uFF0Cfor\u2026in \u5FAA\u73AF\u4F1A\u4EE5\u4EFB\u610F\u987A\u5E8F\u904D\u5386\u952E\u540D\u3002 for\u2026in \u5FAA\u73AF\u4E3B\u8981\u662F\u4E3A\u904D\u5386\u5BF9\u8C61\u800C\u8BBE\u8BA1\u7684\uFF0C\u4E0D\u9002\u7528\u4E8E\u904D\u5386\u6570\u7EC4\u3002 for\u2026of \u5FAA\u73AF</p><p>\u6709\u7740\u540C for\u2026in \u4E00\u6837\u7684\u7B80\u6D01\u8BED\u6CD5\uFF0C\u4F46\u662F\u6CA1\u6709 for\u2026in \u90A3\u4E9B\u7F3A\u70B9\u3002 \u4E0D\u540C\u4E8E forEach \u65B9\u6CD5\uFF0C\u5B83\u53EF\u4EE5\u4E0E break\u3001continue \u548C return \u914D\u5408\u4F7F\u7528\u3002 \u63D0\u4F9B\u4E86\u904D\u5386\u6240\u6709\u6570\u636E\u7ED3\u6784\u7684\u7EDF\u4E00\u64CD\u4F5C\u63A5\u53E3\u3002 2. forEach() forEach(): \u6CA1\u6709\u8FD4\u56DE\u503C\uFF0C\u4E0D\u4F1A\u8FD4\u56DE\u65B0\u7684\u6570\u7EC4\uFF0C\u53EA\u662F\u9488\u5BF9\u6BCF\u4E2A\u5143\u7D20\u8C03\u7528 func \u5FAA\u73AF\u6570\u7EC4\uFF0C\u5728\u539F\u6570\u7EC4\u7684\u57FA\u7840\u4E0A\u6539\u53D8\u6570\u7EC4\uFF0C\u53EF\u4EE5\u7528\u4E8E\u6570\u7EC4\u7684\u4FEE\u6539\u3002\u548C for \u7684\u7528\u6CD5\u4E00\u6837\u7684\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr<span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">555</span><span class="token punctuation">,</span> <span class="token number">6666</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">val<span class="token punctuation">,</span> idx<span class="token punctuation">,</span> array</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// val: \u5F53\u524D\u503C</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// idx\uFF1A\u5F53\u524D\u4E0B\u6807</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// array: \u5F53\u524D\u6570\u7EC4</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

\u7ED3\u679C\uFF1A
<span class="token number">44</span>
<span class="token number">0</span>
<span class="token punctuation">[</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">555</span><span class="token punctuation">,</span> <span class="token number">6666</span> <span class="token punctuation">]</span>
<span class="token number">555</span>
<span class="token number">1</span>
<span class="token punctuation">[</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">555</span><span class="token punctuation">,</span> <span class="token number">6666</span> <span class="token punctuation">]</span>
<span class="token number">6666</span>
<span class="token number">2</span>
<span class="token punctuation">[</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">555</span><span class="token punctuation">,</span> <span class="token number">6666</span> <span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="foreach-\u4E0D\u4F1A\u8FD4\u56DE\u65B0\u7684\u6570\u7EC4-\u800C\u662F\u5728\u539F\u6570\u7EC4\u7684\u57FA\u7840\u4E0A\u6539\u53D8\u6570\u7EC4-\u53EF\u4EE5\u7528\u4E8E\u6570\u7EC4\u7684\u4FEE\u6539\u3002" tabindex="-1"><a class="header-anchor" href="#foreach-\u4E0D\u4F1A\u8FD4\u56DE\u65B0\u7684\u6570\u7EC4-\u800C\u662F\u5728\u539F\u6570\u7EC4\u7684\u57FA\u7840\u4E0A\u6539\u53D8\u6570\u7EC4-\u53EF\u4EE5\u7528\u4E8E\u6570\u7EC4\u7684\u4FEE\u6539\u3002" aria-hidden="true">#</a> forEach() \u4E0D\u4F1A\u8FD4\u56DE\u65B0\u7684\u6570\u7EC4\uFF0C\u800C\u662F\u5728\u539F\u6570\u7EC4\u7684\u57FA\u7840\u4E0A\u6539\u53D8\u6570\u7EC4\uFF0C\u53EF\u4EE5\u7528\u4E8E\u6570\u7EC4\u7684\u4FEE\u6539\u3002</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
a<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">num<span class="token punctuation">,</span> index<span class="token punctuation">,</span> a</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u4E09\u4E2A\u53C2\u6570\u5206\u522B\u4E3A\uFF1A\u5B50\u5143\u7D20\uFF0C\u7D22\u5F15\uFF0C\u539F\u6570\u7EC4</span>
  a<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> num <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [2,3,4,5,6,7]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>forEach \u65E0\u6CD5\u76F4\u63A5\u904D\u5386{}\u5927\u62EC\u53F7\u62EC\u8D77\u6765\u7684\u5BF9\u8C61\uFF0C\u6B64\u65F6\u5E94\u4F7F\u7528 for \u5FAA\u73AF\u904D\u5386\uFF0C\u6216\u8005\u91C7\u7528 Object.keys \u904D\u5386\u5BF9\u8C61\u7684\u5C5E\u6027\u3002 Object.keys()\u65B9\u6CD5\u7684\u53C2\u6570\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u6570\u7EC4\u3002\u8BE5\u6570\u7EC4\u7684\u6210\u5458\u90FD\u662F\u8BE5\u5BF9\u8C61\u81EA\u8EAB\u7684\uFF08\u800C\u4E0D\u662F\u7EE7\u627F\u7684\uFF09\u6240\u6709\u5C5E\u6027\u540D\uFF0C\u4E14\u53EA\u8FD4\u56DE\u53EF\u679A\u4E3E\u7684\u5C5E\u6027\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u4F20\u5165\u5BF9\u8C61\uFF0C \u8FD4\u56DE \u5305\u542B\u5BF9\u8C61\u53EF\u679A\u4E3E\u5C5E\u6027\u548C\u65B9\u6CD5\u7684\u6570\u7EC4</span>
<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;xiaoming&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;name&quot;,&quot;age&quot;]</span>

<span class="token comment">//\u4F20\u5165\u6570\u7EC4\uFF0C\u8FD4\u56DE\u7D22\u5F15\u503C</span>
<span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//[&quot;0&quot;, &quot;1&quot;, &quot;2&quot;]</span>

<span class="token comment">//\u4F20\u5165 json \u5BF9\u8C61,\u83B7\u53D6 \u5C5E\u6027\u4E0E\u503C</span>
<span class="token keyword">const</span> json <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;\u5F20\u4E09&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span>key <span class="token operator">+</span> <span class="token string">&quot;:&quot;</span><span class="token punctuation">,</span> json<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// name:,\u5F20\u4E09 age:,18</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Object.values()\u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u7ED9\u5B9A\u5BF9\u8C61\u81EA\u8EAB\u7684\u6240\u6709\u53EF\u679A\u4E3E\u5C5E\u6027\u503C\u7684\u6570\u7EC4\uFF0C\u503C\u7684\u987A\u5E8F\u4E0E\u4F7F\u7528 for\u2026in \u5FAA\u73AF\u7684\u987A\u5E8F\u76F8\u540C ( \u533A\u522B\u5728\u4E8E for-in \u5FAA\u73AF\u679A\u4E3E\u539F\u578B\u94FE\u4E2D\u7684\u5C5E\u6027 )</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">baz</span><span class="token operator">:</span> <span class="token number">42</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&#39;bar&#39;, 42]</span>

<span class="token comment">// array like object</span>
<span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">0</span><span class="token operator">:</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">:</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token operator">:</span> <span class="token string">&quot;c&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]</span>

<span class="token comment">// array like object with random key ordering</span>
<span class="token comment">// when we use numeric keys, the value returned in a numerical order according to the keys</span>
<span class="token keyword">var</span> an_obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">100</span><span class="token operator">:</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token operator">:</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token operator">:</span> <span class="token string">&quot;c&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>an_obj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&#39;b&#39;, &#39;c&#39;, &#39;a&#39;]</span>

<span class="token comment">// getFoo is property which isn&#39;t enumerable</span>
<span class="token keyword">var</span> my_obj <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">getFoo</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token function-variable function">value</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>foo<span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
my_obj<span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>my_obj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&#39;bar&#39;]</span>

<span class="token comment">// non-object argument will be coerced to an object</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&#39;f&#39;, &#39;o&#39;, &#39;o&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_19-3-filter" tabindex="-1"><a class="header-anchor" href="#_19-3-filter" aria-hidden="true">#</a> 19 3. filter()</h3><p>filter(): \u8FD4\u56DE\u4E00\u4E2A\u7B26\u5408 func \u6761\u4EF6\u7684\u5143\u7D20\u6570\u7EC4\u3002\u7B5B\u9009\u6761\u4EF6\uFF0C\u628A\u6570\u7EC4\u7B26\u5408\u6761\u4EF6\u7684\u653E\u5728\u65B0\u7684\u6570\u7EC4\u91CC\u9762\u8FD4\u56DE\u3002\u65B0\u6570\u7EC4\u548C\u539F\u6765\u7684\u6570\u7EC4\u957F\u5EA6\u4E0D\u4E00\u5B9A\u4E00\u6837\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> b <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">num<span class="token punctuation">,</span> index<span class="token punctuation">,</span> a</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// b \u4E3A\u4E00\u4E2A\u65B0\u7684\u6570\u7EC4</span>
  <span class="token keyword">return</span> num <span class="token operator">&gt;</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//[4,5,6]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-4-map" tabindex="-1"><a class="header-anchor" href="#_5-4-map" aria-hidden="true">#</a> 5 4. map()</h2><p>map(): \u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684 Array\uFF0C\u6BCF\u4E2A\u5143\u7D20\u4E3A\u8C03\u7528 func \u7684\u7ED3\u679C\u3002\u65B0\u6570\u7EC4\u7684\u957F\u5EA6\u548C\u539F\u6765\u7684\u662F\u4E00\u6837\u7684\uFF0C\u4ED6\u53EA\u4E0D\u8FC7\u662F\u9010\u4E00\u5BF9\u539F\u6765\u6570\u636E\u91CC\u7684\u6BCF\u4E2A\u5143\u7D20\u8FDB\u884C\u64CD\u4F5C\u3002 map()\u4E0D\u6539\u53D8\u539F\u6570\u7EC4\uFF0C\u8FD4\u56DE\u6539\u53D8\u540E\u7684\u65B0\u6570\u7EC4\uFF08\u800C foreach \u6539\u53D8\u539F\u6570\u7EC4\uFF0C\u4E14\u6CA1\u6709\u8FD4\u56DE\u503C\uFF09 map()\u548C foreach() \u4E0D\u540C\u5728\u4E8E\u4ED6\u662F\u6709 return \u7684\uFF0C\u5E76\u4E14\u4ED6\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u65B0\u6570\u7EC4\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> b <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1, 2, 3] \u539F\u6570\u7EC4\u5E76\u672A\u6539\u53D8</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [2, 3, 4]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>map \u65B9\u6CD5\u63A5\u53D7\u4E00\u4E2A\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\u3002\u8BE5\u51FD\u6570\u8C03\u7528\u65F6\uFF0Cmap \u65B9\u6CD5\u5411\u5B83\u4F20\u5165\u4E09\u4E2A\u53C2\u6570\uFF1A\u5F53\u524D\u6210\u5458\u3001\u5F53\u524D\u4F4D\u7F6E\u548C\u6570\u7EC4\u672C\u8EAB\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">elem<span class="token punctuation">,</span> index<span class="token punctuation">,</span> arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">return</span> elem \\<span class="token operator">*</span> index<span class="token punctuation">;</span> <span class="token comment">// [0, 2, 6]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">1</span>
<span class="token number">2</span>
<span class="token number">3</span>
\u4E3E\u4F8B

<span class="token keyword">this</span><span class="token punctuation">.</span>list <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
<span class="token keyword">return</span> <span class="token punctuation">{</span>
<span class="token operator">...</span>item<span class="token punctuation">,</span>
<span class="token literal-property property">direction</span><span class="token operator">:</span> <span class="token string">&#39;left&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-5-every-\u548C-some" tabindex="-1"><a class="header-anchor" href="#_6-5-every-\u548C-some" aria-hidden="true">#</a> 6 5. every() \u548C some()</h3><p>some(): \u8FD4\u56DE\u4E00\u4E2A boolean\uFF0C\u5224\u65AD\u662F\u5426\u6709\u5143\u7D20\u662F\u5426\u7B26\u5408 func \u6761\u4EF6\u3002\u6570\u7EC4\u91CC\u9762\u6240\u6709\u7684\u5143\u7D20\u6709\u4E00\u4E2A\u7B26\u5408\u6761\u4EF6\u5C31\u8FD4\u56DE true\u3002</p><p>every():\u8FD4\u56DE\u4E00\u4E2A boolean\uFF0C\u5224\u65AD\u6BCF\u4E2A\u5143\u7D20\u662F\u5426\u7B26\u5408 func \u6761\u4EF6\u3002\u6570\u7EC4\u91CC\u9762\u6240\u6709\u7684\u5143\u7D20\u90FD\u7B26\u5408\u624D\u8FD4\u56DE true\u3002</p><p>every \u548C some \u90FD\u53EA\u662F\u5224\u65AD\uFF0C\u4E0D\u505A\u5904\u7406\uFF0C\u4E0D\u751F\u6210\u65B0\u7684\u6570\u7EC4\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// every \u4E2D\u6BCF\u4E00\u4E2A\u5143\u7D20\u90FD\u8981\u5927\u4E8E 3 \u8FD4\u56DE true, \u5426\u5219\u8FD4\u56DE false</span>
<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> b <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">num<span class="token punctuation">,</span> index<span class="token punctuation">,</span> a</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> num <span class="token operator">&gt;</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>

<span class="token comment">// some \u4E2D\u4EFB\u610F\u4E00\u4E2A\u53EA\u8981\u5927\u4E8E 3 \u8FD4\u56DE true, \u6CA1\u6709\u4EFB\u4F55\u4E00\u4E2A \u8FD4\u56DE false</span>
<span class="token keyword">let</span> c <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">num<span class="token punctuation">,</span> index<span class="token punctuation">,</span> a</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> num <span class="token operator">&gt;</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528\u6280\u5DE7\uFF1A every \u548C some \u90FD\u901A\u8FC7\u63A7\u5236 return \u7684\u503C\u6765\u8DF3\u51FA\u5FAA\u73AF\u3002 \u5177\u4F53\u505A\u6CD5\u662F\uFF1A</p><p>every \u65B9\u6CD5\u8FD4\u56DE\u503C\u662F\u5E03\u5C14\u7C7B\u578B\uFF0C\u6700\u7EC8\u8FD4\u56DE\u503C\u4E3A true \u9700\u8981\u6BCF\u4E00\u6B21\u56DE\u8C03\u51FD\u6570\u8FD4\u56DE\u503C\u90FD\u4E3A true\uFF0C\u5982\u679C\u67D0\u4E00\u6B21\u56DE\u8C03\u51FD\u6570\u8FD4\u56DE\u503C\u4E3A false \u5219 every \u65B9\u6CD5\u7ED3\u675F\u5BF9\u6570\u7EC4\u7684\u904D\u5386\u5E76\u8FD4\u56DE false\uFF0C\u6240\u4EE5\u5728\u60F3\u8981\u8DF3\u51FA\u5FAA\u73AF\u65F6\u56DE\u8C03\u51FD\u6570 return false\uFF0C\u56E0\u4E3A every \u4F1A\u5BF9 callback \u56DE\u8C03\u51FD\u6570\u4E2D\u7684\u8FD4\u56DE\u503C\u505A\u7684\u5224\u65AD\u5904\u7406\u7C7B\u4F3C\u4E8E&amp;&amp;\u3002</p><p>some \u65B9\u6CD5\u8FD4\u56DE\u503C\u662F\u5E03\u5C14\u7C7B\u578B\uFF0C\u6700\u7EC8\u8FD4\u56DE\u503C\u4E3A true \u53EA\u9700\u8981\u4EFB\u610F\u4E00\u6B21\u56DE\u8C03\u51FD\u6570\u8FD4\u56DE\u503C\u4E3A true \u5C31\u4F1A\u7ED3\u675F\u5BF9\u6570\u7EC4\u7684\u904D\u5386\uFF0C\u5982\u679C\u6BCF\u4E00\u6B21\u56DE\u8C03\u51FD\u6570\u8FD4\u56DE\u503C\u90FD\u4E3A false \u7684\u8BDD\u5219 some \u65B9\u6CD5\u5C31\u4F1A\u4E00\u76F4\u904D\u5386\u8F96\u533A\u5E76\u8FD4\u56DE false\uFF0C\u6240\u4EE5\u5728\u60F3\u8981\u8DF3\u51FA\u5FAA\u73AF\u65F6\u56DE\u8C03\u51FD\u6570 return true\uFF0C\u56E0\u4E3A some \u4F1A\u5BF9 callback \u56DE\u8C03\u51FD\u6570\u4E2D\u7684\u8FD4\u56DE\u503C\u505A\u7684\u5224\u65AD\u5904\u7406\u7C7B\u4F3C\u4E8E||\u3002</p><p>\u5B9E\u9645\u8FD0\u7528\u4E2D\uFF0C\u5982\u679C\u5E0C\u671B\u8DF3\u51FA\u5FAA\u73AF\u65F6\u5F97\u5230\u7684\u5224\u65AD\u503C\u4E3A true \u7684\u8BDD\u5219\u7528 some\uFF0C\u5982\u679C\u5E0C\u671B\u8DF3\u51FA\u5FAA\u73AF\u65F6\u5F97\u5230\u7684\u5224\u65AD\u503C\u4E3A false \u7684\u8BDD\u5219\u7528 every\u3002\u6BD4\u5982\u5728\u5224\u5B9A\u7528\u6237\u662F\u5426\u52FE\u9009\u4E86\u4E0D\u53EF\u64CD\u4F5C\u7684\u6570\u636E\uFF0C\u6216\u8005\u662F\u5426\u52FE\u9009\u4E86\u4E00\u6761\u53EF\u4EE5\u64CD\u4F5C\u7684\u6570\u636E\u53EF\u4EE5\u4F7F\u7528\u8FD9\u4E24\u4E2A\u65B9\u6CD5\u904D\u5386\u5FAA\u73AF\u6570\u7EC4\u3002</p><p>6.reduce()\uFF0CreduceRight() reduce \u65B9\u6CD5\u548C reduceRight \u65B9\u6CD5\u4F9D\u6B21\u5904\u7406\u6570\u7EC4\u7684\u6BCF\u4E2A\u6210\u5458\uFF0C\u6700\u7EC8\u7D2F\u8BA1\u4E3A\u4E00\u4E2A\u503C\u3002 \u5B83\u4EEC\u7684\u5DEE\u522B\u662F\uFF0Creduce \u662F\u4ECE\u5DE6\u5230\u53F3\u5904\u7406\uFF08\u4ECE\u7B2C\u4E00\u4E2A\u6210\u5458\u5230\u6700\u540E\u4E00\u4E2A\u6210\u5458\uFF09\uFF0CreduceRight \u5219\u662F\u4ECE\u53F3\u5230\u5DE6\uFF08\u4ECE\u6700\u540E\u4E00\u4E2A\u6210\u5458\u5230\u7B2C\u4E00\u4E2A\u6210\u5458\uFF09\uFF0C\u5176\u4ED6\u5B8C\u5168\u4E00\u6837\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 1 2</span>
<span class="token comment">// 3 3</span>
<span class="token comment">// 6 4</span>
<span class="token comment">// 10 5</span>
<span class="token comment">//\u6700\u540E\u7ED3\u679C\uFF1A15</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>reduce \u65B9\u6CD5\u548C reduceRight \u65B9\u6CD5\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u90FD\u662F\u4E00\u4E2A\u51FD\u6570\u3002\u8BE5\u51FD\u6570\u63A5\u53D7\u4EE5\u4E0B\u56DB\u4E2A\u53C2\u6570\u3002</p><p>\u7D2F\u79EF\u53D8\u91CF(\u5FC5\u987B)\uFF0C\u9ED8\u8BA4\u4E3A\u6570\u7EC4\u7684\u7B2C\u4E00\u4E2A\u6210\u5458 \u5F53\u524D\u53D8\u91CF(\u5FC5\u987B)\uFF0C\u9ED8\u8BA4\u4E3A\u6570\u7EC4\u7684\u7B2C\u4E8C\u4E2A\u6210\u5458 \u5F53\u524D\u4F4D\u7F6E(\u53EF\u9009)\uFF08\u4ECE 0 \u5F00\u59CB\uFF09 \u539F\u6570\u7EC4(\u53EF\u9009) \u5982\u679C\u8981\u5BF9\u7D2F\u79EF\u53D8\u91CF\u6307\u5B9A\u521D\u503C\uFF0C\u53EF\u4EE5\u628A\u5B83\u653E\u5728 reduce \u65B9\u6CD5\u548C reduceRight \u65B9\u6CD5\u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> result2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 25</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570\u76F8\u5F53\u4E8E\u8BBE\u5B9A\u4E86\u9ED8\u8BA4\u503C\uFF0C\u5904\u7406\u7A7A\u6570\u7EC4\u65F6\u5C24\u5176\u6709\u7528\uFF0C\u53EF\u907F\u514D\u4E00\u4E9B\u7A7A\u6307\u9488\u5F02\u5E38\u3002 \u7531\u4E8E\u8FD9\u4E24\u4E2A\u65B9\u6CD5\u4F1A\u904D\u5386\u6570\u7EC4\uFF0C\u6240\u4EE5\u5B9E\u9645\u4E0A\u8FD8\u53EF\u4EE5\u7528\u6765\u505A\u4E00\u4E9B\u904D\u5386\u76F8\u5173\u7684\u64CD\u4F5C\u3002\u6BD4\u5982\uFF0C\u627E\u51FA\u5B57\u7B26\u957F\u5EA6\u6700\u957F\u7684\u6570\u7EC4\u6210\u5458\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">findLongest</span><span class="token punctuation">(</span><span class="token parameter">entries</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> entries<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">longest<span class="token punctuation">,</span> entry</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> entry<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> longest<span class="token punctuation">.</span>length <span class="token operator">?</span> entry <span class="token operator">:</span> longest<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token function">findLongest</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;aaa&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;bb&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;aaa&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,38),o=[e];function c(u,l){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","index.html.vue"]]);export{r as default};
