import{_ as n,o as s,c as a,e as t}from"./app.223aa7f2.js";const p={},e=t(`<h1 id="matlab-\u548C-python-\u63A5\u6536-lsl-\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#matlab-\u548C-python-\u63A5\u6536-lsl-\u6570\u636E" aria-hidden="true">#</a> matlab \u548C python \u63A5\u6536 LSL \u6570\u636E</h1><h2 id="lsl" tabindex="-1"><a class="header-anchor" href="#lsl" aria-hidden="true">#</a> LSL</h2><p>The lab streaming layer (LSL) is a system for the unified collection of measurement time series in research experiments that handles both the networking, time-synchronization, (near-) real-time access as well as optionally the centralized collection, viewing and disk recording of the data. https://github.com/sccn/labstreaminglayer</p><h3 id="\u57FA\u7840\u5934\u6587\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u57FA\u7840\u5934\u6587\u4EF6" aria-hidden="true">#</a> \u57FA\u7840\u5934\u6587\u4EF6</h3><table><thead><tr><th style="text-align:left;">\u6807\u7B7E</th><th style="text-align:left;">\u63CF\u8FF0\u4FE1\u606F</th></tr></thead><tbody><tr><td style="text-align:left;">name</td><td style="text-align:left;">[type][channel] \u6570\u636E\u7C7B\u578B+\u8F93\u51FA\u901A\u9053\uFF08Default\u901A\u9053\u4E3A\u7A7A\uFF0CChannel1~Channel9\u4E3A1~9\uFF09</td></tr><tr><td style="text-align:left;">type</td><td style="text-align:left;">Command/Gaze/Behavior/VRScene/VRGaze/VRGait</td></tr><tr><td style="text-align:left;">channel_count</td><td style="text-align:left;">\u53D1\u9001\u6570\u636E\u901A\u9053\u6570</td></tr><tr><td style="text-align:left;">channel_format</td><td style="text-align:left;">\u6570\u636E\u7C7B\u578B</td></tr><tr><td style="text-align:left;">source_id</td><td style="text-align:left;">\u552F\u4E00\uFF0CGuid</td></tr><tr><td style="text-align:left;">nominal_srate</td><td style="text-align:left;">\u91C7\u6837\u7387</td></tr></tbody></table><h3 id="examples" tabindex="-1"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h3><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>info</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>Command1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">&gt;</span></span>Command<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>channel_count</span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>channel_count</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>channel_format</span><span class="token punctuation">&gt;</span></span>int32<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>channel_format</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source_id</span><span class="token punctuation">&gt;</span></span>1d8b12d8-349c-487c-a40c-4ebfae83d7a2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>source_id</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nominal_srate</span><span class="token punctuation">&gt;</span></span>0.000000<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nominal_srate</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.100000<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>created_at</span><span class="token punctuation">&gt;</span></span>300390.476483<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>created_at</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uid</span><span class="token punctuation">&gt;</span></span>a8e65937-f465-4e9c-820e-78c95b20293c<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>uid</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>session_id</span><span class="token punctuation">&gt;</span></span>default<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>session_id</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hostname</span><span class="token punctuation">&gt;</span></span>Z\u5C0F\u67D3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>hostname</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v4address</span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v4data_port</span><span class="token punctuation">&gt;</span></span>16572<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v4data_port</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v4service_port</span><span class="token punctuation">&gt;</span></span>16578<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v4service_port</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v6address</span> <span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v6data_port</span><span class="token punctuation">&gt;</span></span>16572<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v6data_port</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>v6service_port</span><span class="token punctuation">&gt;</span></span>16578<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>v6service_port</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>desc</span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>info</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u6CE8\u610F\uFF1A \u4F7F\u7528\u4E0D\u540C\u7684Type\uFF0C\u9700\u8981\u5728<desc></desc>\u6807\u7B7E\u4E2D\u52A0\u5165\u5BF9\u5E94\u7684\u63CF\u8FF0\u4FE1\u606F\u3002 \u4EE5\u4E0B\u6536\u53D1\u6570\u636EExample\u5747\u4E3A\u901A\u90531\u8F93\u51FA\u793A\u4F8B\u3002</p></blockquote><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">from</span> pylsl <span class="token keyword">import</span> StreamInlet<span class="token punctuation">,</span> resolve_stream

<span class="token keyword">def</span> <span class="token function">receive_lsl_eeg_data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># \u521B\u5EFA\u4E00\u4E2Ainlet\u4ECEEEG\u6D41\u4E2D\u8BFB\u53D6\u6570\u636E</span>
    streams <span class="token operator">=</span> resolve_stream<span class="token punctuation">(</span><span class="token string">&#39;type&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;EEG&#39;</span><span class="token punctuation">)</span>
    inlet <span class="token operator">=</span> StreamInlet<span class="token punctuation">(</span>streams<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

    <span class="token comment"># \u8BFB\u53D6inlet\u4E2D\u7684info\u4FE1\u606F</span>
    info <span class="token operator">=</span> inlet<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment"># \u5C06info\u76F4\u63A5\u8F6C\u4E3A\u5B57\u7B26\u4E32\u6570\u636E\u76F4\u63A5\u89E3\u6790xml</span>
    <span class="token comment"># xml = info.as_xml()</span>
    <span class="token comment"># print(xml)</span>

    <span class="token comment"># \u91C7\u7528lsl\u5185\u90E8\u65B9\u6CD5\u89E3\u6790info\u4E2D\u7684\u63CF\u8FF0\u4FE1\u606F</span>
    receive_name <span class="token operator">=</span> info<span class="token punctuation">.</span>name<span class="token punctuation">(</span><span class="token punctuation">)</span>
    receive_type <span class="token operator">=</span> info<span class="token punctuation">.</span><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    channel_count <span class="token operator">=</span> info<span class="token punctuation">.</span>channel_count<span class="token punctuation">(</span><span class="token punctuation">)</span>
    channel_format <span class="token operator">=</span> info<span class="token punctuation">.</span>channel_format<span class="token punctuation">(</span><span class="token punctuation">)</span>
    source_id <span class="token operator">=</span> info<span class="token punctuation">.</span>source_id<span class="token punctuation">(</span><span class="token punctuation">)</span>
    nominal_srate <span class="token operator">=</span> info<span class="token punctuation">.</span>nominal_srate<span class="token punctuation">(</span><span class="token punctuation">)</span>
    msg <span class="token operator">=</span> <span class="token string">&quot;receive_name:{0} receive_type:{1} channel_count:{2} channel_format:{3} source_id:{4} nominal_srate:{5}&quot;</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>receive_name<span class="token punctuation">,</span> receive_type<span class="token punctuation">,</span> channel_count<span class="token punctuation">,</span> channel_format<span class="token punctuation">,</span> source_id<span class="token punctuation">,</span> nominal_srate<span class="token punctuation">)</span><span class="token punctuation">)</span>

    msg <span class="token operator">=</span> <span class="token string">&quot;channel_label:{0} channel_type:{1} channel_unit:{2} channel_location_x:{3} channel_location_y:{4} channel_location_z:{5}&quot;</span>
    channels <span class="token operator">=</span> info<span class="token punctuation">.</span>desc<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>child<span class="token punctuation">(</span><span class="token string">&#39;channels&#39;</span><span class="token punctuation">)</span>
    i <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">while</span> i <span class="token operator">&lt;</span> channel_count<span class="token punctuation">:</span>
        <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
            channel <span class="token operator">=</span> channels<span class="token punctuation">.</span>child<span class="token punctuation">(</span><span class="token string">&#39;channel&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            channel <span class="token operator">=</span> channel<span class="token punctuation">.</span>next_sibling<span class="token punctuation">(</span><span class="token punctuation">)</span>

        channel_label <span class="token operator">=</span> channel<span class="token punctuation">.</span>child_value<span class="token punctuation">(</span><span class="token string">&#39;label&#39;</span><span class="token punctuation">)</span>
        channel_type <span class="token operator">=</span> channel<span class="token punctuation">.</span>child_value<span class="token punctuation">(</span><span class="token string">&#39;type&#39;</span><span class="token punctuation">)</span>
        channel_unit <span class="token operator">=</span> channel<span class="token punctuation">.</span>child_value<span class="token punctuation">(</span><span class="token string">&#39;unit&#39;</span><span class="token punctuation">)</span>
        channel_location <span class="token operator">=</span> channel<span class="token punctuation">.</span>child<span class="token punctuation">(</span><span class="token string">&#39;location&#39;</span><span class="token punctuation">)</span>
        channel_location_x <span class="token operator">=</span> channel_location<span class="token punctuation">.</span>child_value<span class="token punctuation">(</span><span class="token string">&#39;X&#39;</span><span class="token punctuation">)</span>
        channel_location_y <span class="token operator">=</span> channel_location<span class="token punctuation">.</span>child_value<span class="token punctuation">(</span><span class="token string">&#39;Y&#39;</span><span class="token punctuation">)</span>
        channel_location_z <span class="token operator">=</span> channel_location<span class="token punctuation">.</span>child_value<span class="token punctuation">(</span><span class="token string">&#39;Z&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>channel_label<span class="token punctuation">,</span> channel_type<span class="token punctuation">,</span> channel_unit<span class="token punctuation">,</span> channel_location_x<span class="token punctuation">,</span> channel_location_y<span class="token punctuation">,</span> channel_location_z<span class="token punctuation">)</span><span class="token punctuation">)</span>

        i <span class="token operator">+=</span> <span class="token number">1</span>

    <span class="token comment"># \u5FAA\u73AF\u4ECEinlet\u4E2D\u83B7\u53D6\u6570\u636E\u548Clsl\u5185\u90E8\u65F6\u95F4\u6233</span>
    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
        sample<span class="token punctuation">,</span> timestamp <span class="token operator">=</span> inlet<span class="token punctuation">.</span>pull_sample<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>sample<span class="token punctuation">,</span> timestamp<span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    receive_lsl_eeg_data<span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-matlab ext-matlab line-numbers-mode"><pre class="language-matlab"><code><span class="token keyword">function</span> <span class="token function">receive_lsl_eeg_data</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">% \u521B\u5EFA\u4E00\u4E2Ainlet\u4ECEEEG\u6D41\u4E2D\u8BFB\u53D6\u6570\u636E</span>
    lib <span class="token operator">=</span> <span class="token function">lsl_loadlib</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    result <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token function">isempty</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
      result <span class="token operator">=</span> <span class="token function">lsl_resolve_byprop</span><span class="token punctuation">(</span>lib<span class="token punctuation">,</span><span class="token string">&#39;type&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;EEG&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">end</span>
    inlet <span class="token operator">=</span> <span class="token function">lsl_inlet</span><span class="token punctuation">(</span>result<span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">% \u8BFB\u53D6inlet\u4E2D\u7684info\u4FE1\u606F</span>
    info <span class="token operator">=</span> inlet<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">% \u53EF\u4EE5\u5C06info\u76F4\u63A5\u8F6C\u4E3A\u5B57\u7B26\u4E32\u6570\u636E\u89E3\u6790xml</span>
    <span class="token comment">% xml = info.as_xml();</span>
    <span class="token comment">% fprintf(xml);</span>

    <span class="token comment">% \u91C7\u7528lsl\u5185\u90E8\u65B9\u6CD5\u89E3\u6790info\u4E2D\u7684\u63CF\u8FF0\u4FE1\u606F</span>
    receive_name <span class="token operator">=</span> info<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    receive_type <span class="token operator">=</span> info<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    channel_count <span class="token operator">=</span> info<span class="token punctuation">.</span><span class="token function">channel_count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    channel_format <span class="token operator">=</span> info<span class="token punctuation">.</span><span class="token function">channel_format</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    source_id <span class="token operator">=</span> info<span class="token punctuation">.</span><span class="token function">source_id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    nominal_srate <span class="token operator">=</span> info<span class="token punctuation">.</span><span class="token function">nominal_srate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    msg <span class="token operator">=</span> &quot;receive_name<span class="token operator">:</span><span class="token comment">%s receive_type:%s channel_count:%i channel_format:%s source_id:%s nominal_srate:%f\\n&quot;;</span>
    <span class="token function">fprintf</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> receive_name<span class="token punctuation">,</span> receive_type<span class="token punctuation">,</span> channel_count<span class="token punctuation">,</span> channel_format<span class="token punctuation">,</span> source_id<span class="token punctuation">,</span> nominal_srate<span class="token punctuation">)</span><span class="token punctuation">;</span>

    msg <span class="token operator">=</span> &quot;channel_label<span class="token operator">:</span><span class="token comment">%s channel_type:%s channel_unit:%s channel_location_x:%s channel_location_y:%s channel_location_z:%s\\n&quot;;</span>
    channels <span class="token operator">=</span> info<span class="token punctuation">.</span><span class="token function">desc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">child</span><span class="token punctuation">(</span><span class="token string">&#39;channels&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token number">i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token number">i</span> <span class="token operator">&lt;</span> channel_count
        <span class="token keyword">if</span> <span class="token number">i</span> <span class="token operator">==</span> <span class="token number">0</span>
            channel <span class="token operator">=</span> channels<span class="token punctuation">.</span><span class="token function">child</span><span class="token punctuation">(</span><span class="token string">&#39;channel&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            channel <span class="token operator">=</span> channel<span class="token punctuation">.</span><span class="token function">next_sibling</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">end</span>

        channel_label <span class="token operator">=</span> channel<span class="token punctuation">.</span><span class="token function">child_value</span><span class="token punctuation">(</span><span class="token string">&#39;label&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        channel_type <span class="token operator">=</span> channel<span class="token punctuation">.</span><span class="token function">child_value</span><span class="token punctuation">(</span><span class="token string">&#39;type&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        channel_unit <span class="token operator">=</span> channel<span class="token punctuation">.</span><span class="token function">child_value</span><span class="token punctuation">(</span><span class="token string">&#39;unit&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        channel_location <span class="token operator">=</span> channel<span class="token punctuation">.</span><span class="token function">child</span><span class="token punctuation">(</span><span class="token string">&#39;location&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        channel_location_x <span class="token operator">=</span> channel_location<span class="token punctuation">.</span><span class="token function">child_value</span><span class="token punctuation">(</span><span class="token string">&#39;X&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        channel_location_y <span class="token operator">=</span> channel_location<span class="token punctuation">.</span><span class="token function">child_value</span><span class="token punctuation">(</span><span class="token string">&#39;Y&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        channel_location_z <span class="token operator">=</span> channel_location<span class="token punctuation">.</span><span class="token function">child_value</span><span class="token punctuation">(</span><span class="token string">&#39;Z&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">fprintf</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> channel_label<span class="token punctuation">,</span> channel_type<span class="token punctuation">,</span> channel_unit<span class="token punctuation">,</span> channel_location_x<span class="token punctuation">,</span> channel_location_y<span class="token punctuation">,</span> channel_location_z<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token number">i</span> <span class="token operator">=</span> <span class="token number">i</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">end</span>

    <span class="token comment">% \u5FAA\u73AF\u4ECEinlet\u4E2D\u83B7\u53D6\u6570\u636E\u548Clsl\u5185\u90E8\u65F6\u95F4\u6233</span>
    <span class="token keyword">while</span> true
        <span class="token punctuation">[</span>vec<span class="token punctuation">,</span>ts<span class="token punctuation">]</span> <span class="token operator">=</span> inlet<span class="token punctuation">.</span><span class="token function">pull_sample</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token string">&#39;%f\\t&#39;</span><span class="token punctuation">,</span>vec<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token string">&#39;%f\\n&#39;</span><span class="token punctuation">,</span>ts<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">end</span>
<span class="token keyword">end</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),c=[e];function o(l,i){return s(),a("div",null,c)}const k=n(p,[["render",o],["__file","index.html.vue"]]);export{k as default};
